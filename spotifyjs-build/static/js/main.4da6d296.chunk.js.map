{"version":3,"sources":["data/path.js","data/classes.js","data/typedefs.js","components/coverpage.jsx","components/footer.jsx","Script.jsx","App.jsx","components/header.jsx","Page.jsx","Docs.jsx","GuidePage.jsx","Search.jsx","index.js"],"names":["module","exports","Client","description","example","params","properties","token","type","startedAt","utils","href","oauth","albums","artists","playlists","tracks","users","episodes","shows","browse","user","getters","uptime","methods","search","returns","parameters","login","Auth","get","refresh","build","Util","hexToRgb","fetch","getURIData","getCodeImage","Browse","getCategory","getCategoryPlaylists","categories","featuredCategories","newReleases","Artist","getAlbums","topTracks","relatedArtists","Album","getTracks","Playlist","getCoverImage","follows","User","getPlaylists","Track","audioFeatures","audioAnalysis","Episode","Show","getEpisodes","UserClient","player","info","getTopTracks","getTopArtists","getAffinity","getShows","deleteAlbum","deleteTrack","deleteShow","addAlbum","addTrack","addShow","followsUser","followsArtist","followUser","followArtist","followPlaylist","follow","unfollowUser","unfollowArtist","unfollowPlaylist","unfollow","UserPlayer","getCurrentPlayback","getDevices","getRecentlyPlayed","getCurrentlyPlaying","play","pause","seek","repeat","setVolume","next","previous","shuffle","SearchOptions","BasicOptions","AuthGetOptions","AuthBuildOptions","AuthRefreshOptions","AuthRefresh","FetchOptions","RecentlyPlayedOptions","CodeImageReturn","DominantColor","CoverPage","id","align","style","borderRadius","position","top","left","right","paddingBottom","background","height","className","class","color","src","width","padding","overflow","Footer","highlight","document","querySelectorAll","forEach","x","innerHTML","includes","replace","App","SL","getElementById","Math","floor","random","e","React","Component","Header","cursor","fontSize","fontWeight","aria-hidden","sidebarOpen","innerWidth","resize","_","display","sidebar","Page","scrollTo","queries","URLSearchParams","location","split","element","scrollIntoView","window","addEventListener","marginTop","props","this","children","onClick","Docs","DocSection","docType","data","cls","push","Object","keys","join","property","toLowerCase","method","methodName","opacity","map","typedef","typedefName","Guide","state","guide","hashDidChange","setState","then","res","text","body","removeEventListener","markdown","path","require","typeColors","Search","pathKeys","load","code","value","filter","startsWith","toUpperCase","name","placeholder","length","classDoc","typedefDoc","guides","y","marginLeft","xLower","ReactDOM","render","basename","exact","component","useParams","slice","classData","typeData","guideName","GuidePage"],"mappings":"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CACHJ,YAAa,kBACbK,KAAM,WAGdgB,QAAS,CACLe,YAAa,CACTpC,YAAa,iEACbuB,QAAS,eACTC,WAAY,CACR,CACI,KACA,SACA,wBAIZa,qBAAsB,CAClBrC,YAAa,+DACbuB,QAAS,eACTC,WAAY,CACR,CACI,KACA,SACA,sBAEJ,CACI,QACA,SACA,sBACA,KAIZc,WAAY,CACRtC,YAAa,sCACbuB,QAAS,eACTC,WAAY,CACR,CACI,QACA,SACA,sBACA,KAIZe,mBAAoB,CAChBvC,YAAa,+CACbuB,QAAS,eACTC,WAAY,CACR,CACI,QACA,SACA,sBACA,KAIZgB,YAAa,CACTxC,YAAa,wCACbuB,QAAS,eACTC,WAAY,CACR,CACI,QACA,SACA,sBACA,OAMpBiB,OAAS,CACLzC,YAAa,gDACbC,QAAS,8BACTE,WAAY,CACRC,MAAO,CACHJ,YAAa,kBACbK,KAAM,WAGdgB,QAAS,CACLC,OAAQ,CACJtB,YAAa,wDACbuB,QAAS,iBACTC,WAAY,CACR,CACI,IACA,SACA,mBAEJ,CACI,UACA,eACA,gDACA,KAIZG,IAAK,CACD3B,YAAa,mCACbuB,QAAS,eACTC,WAAY,CACR,CACI,KACA,SACA,sBAIZkB,UAAW,CACP1C,YAAa,oEACbuB,QAAS,iBACTC,WAAY,CACR,CACI,KACA,SACA,oBAEJ,CACI,UACA,eACA,gDACA,KAIZmB,UAAW,CACP3C,YAAa,gEACbuB,QAAS,iBACTC,WAAY,CACR,CACI,KACA,SACA,oBAEJ,CACI,UACA,eACA,gDACA,KAIZoB,eAAgB,CACZ5C,YAAa,yEACbuB,QAAS,iBACTC,WAAY,CACR,CACI,KACA,SACA,oBAEJ,CACI,UACA,eACA,gDACA,OAMpBqB,MAAQ,CACJ7C,YAAa,+CACbC,QAAS,6BACTE,WAAY,CACRC,MAAO,CACHJ,YAAa,kBACbK,KAAM,WAGdgB,QAAS,CACLC,OAAQ,CACJtB,YAAa,wBACbuB,QAAS,iBACTC,WAAY,CACR,CACI,IACA,SACA,mBAEJ,CACI,UACA,eACA,gDACA,KAIZG,IAAK,CACD3B,YAAa,2BACbuB,QAAS,eACT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","file":"static/js/main.4da6d296.chunk.js","sourcesContent":["module.exports = {\"Client\":{\"type\":\"class\",\"name\":\"Client\",\"href\":\"/#/docs/class/Client\"},\"Client.search\":{\"type\":\"method\",\"name\":\"Client.search\",\"href\":\"/#/docs/class/Client?scrollTo=search\"},\"Client.login\":{\"type\":\"method\",\"name\":\"Client.login\",\"href\":\"/#/docs/class/Client?scrollTo=login\"},\"Client.token\":{\"type\":\"property\",\"name\":\"Client.token\",\"href\":\"/#/docs/class/Client?scrollTo=token\"},\"Client.startedAt\":{\"type\":\"property\",\"name\":\"Client.startedAt\",\"href\":\"/#/docs/class/Client?scrollTo=startedAt\"},\"Client.utils\":{\"type\":\"property\",\"name\":\"Client.utils\",\"href\":\"/#/docs/class/Client?scrollTo=utils\"},\"Client.oauth\":{\"type\":\"property\",\"name\":\"Client.oauth\",\"href\":\"/#/docs/class/Client?scrollTo=oauth\"},\"Client.albums\":{\"type\":\"property\",\"name\":\"Client.albums\",\"href\":\"/#/docs/class/Client?scrollTo=albums\"},\"Client.artists\":{\"type\":\"property\",\"name\":\"Client.artists\",\"href\":\"/#/docs/class/Client?scrollTo=artists\"},\"Client.playlists\":{\"type\":\"property\",\"name\":\"Client.playlists\",\"href\":\"/#/docs/class/Client?scrollTo=playlists\"},\"Client.tracks\":{\"type\":\"property\",\"name\":\"Client.tracks\",\"href\":\"/#/docs/class/Client?scrollTo=tracks\"},\"Client.users\":{\"type\":\"property\",\"name\":\"Client.users\",\"href\":\"/#/docs/class/Client?scrollTo=users\"},\"Client.episodes\":{\"type\":\"property\",\"name\":\"Client.episodes\",\"href\":\"/#/docs/class/Client?scrollTo=episodes\"},\"Client.shows\":{\"type\":\"property\",\"name\":\"Client.shows\",\"href\":\"/#/docs/class/Client?scrollTo=shows\"},\"Client.browse\":{\"type\":\"property\",\"name\":\"Client.browse\",\"href\":\"/#/docs/class/Client?scrollTo=browse\"},\"Client.user\":{\"type\":\"property\",\"name\":\"Client.user\",\"href\":\"/#/docs/class/Client?scrollTo=user\"},\"Auth\":{\"type\":\"class\",\"name\":\"Auth\",\"href\":\"/#/docs/class/Auth\"},\"Auth.get\":{\"type\":\"method\",\"name\":\"Auth.get\",\"href\":\"/#/docs/class/Auth?scrollTo=get\"},\"Auth.refresh\":{\"type\":\"method\",\"name\":\"Auth.refresh\",\"href\":\"/#/docs/class/Auth?scrollTo=refresh\"},\"Auth.build\":{\"type\":\"method\",\"name\":\"Auth.build\",\"href\":\"/#/docs/class/Auth?scrollTo=build\"},\"Auth.token\":{\"type\":\"property\",\"name\":\"Auth.token\",\"href\":\"/#/docs/class/Auth?scrollTo=token\"},\"Util\":{\"type\":\"class\",\"name\":\"Util\",\"href\":\"/#/docs/class/Util\"},\"Util.hexToRgb\":{\"type\":\"method\",\"name\":\"Util.hexToRgb\",\"href\":\"/#/docs/class/Util?scrollTo=hexToRgb\"},\"Util.fetch\":{\"type\":\"method\",\"name\":\"Util.fetch\",\"href\":\"/#/docs/class/Util?scrollTo=fetch\"},\"Util.getURIData\":{\"type\":\"method\",\"name\":\"Util.getURIData\",\"href\":\"/#/docs/class/Util?scrollTo=getURIData\"},\"Util.getCodeImage\":{\"type\":\"method\",\"name\":\"Util.getCodeImage\",\"href\":\"/#/docs/class/Util?scrollTo=getCodeImage\"},\"Util.token\":{\"type\":\"property\",\"name\":\"Util.token\",\"href\":\"/#/docs/class/Util?scrollTo=token\"},\"Browse\":{\"type\":\"class\",\"name\":\"Browse\",\"href\":\"/#/docs/class/Browse\"},\"Browse.getCategory\":{\"type\":\"method\",\"name\":\"Browse.getCategory\",\"href\":\"/#/docs/class/Browse?scrollTo=getCategory\"},\"Browse.getCategoryPlaylists\":{\"type\":\"method\",\"name\":\"Browse.getCategoryPlaylists\",\"href\":\"/#/docs/class/Browse?scrollTo=getCategoryPlaylists\"},\"Browse.categories\":{\"type\":\"method\",\"name\":\"Browse.categories\",\"href\":\"/#/docs/class/Browse?scrollTo=categories\"},\"Browse.featuredCategories\":{\"type\":\"method\",\"name\":\"Browse.featuredCategories\",\"href\":\"/#/docs/class/Browse?scrollTo=featuredCategories\"},\"Browse.newReleases\":{\"type\":\"method\",\"name\":\"Browse.newReleases\",\"href\":\"/#/docs/class/Browse?scrollTo=newReleases\"},\"Browse.token\":{\"type\":\"property\",\"name\":\"Browse.token\",\"href\":\"/#/docs/class/Browse?scrollTo=token\"},\"Artist\":{\"type\":\"class\",\"name\":\"Artist\",\"href\":\"/#/docs/class/Artist\"},\"Artist.search\":{\"type\":\"method\",\"name\":\"Artist.search\",\"href\":\"/#/docs/class/Artist?scrollTo=search\"},\"Artist.get\":{\"type\":\"method\",\"name\":\"Artist.get\",\"href\":\"/#/docs/class/Artist?scrollTo=get\"},\"Artist.getAlbums\":{\"type\":\"method\",\"name\":\"Artist.getAlbums\",\"href\":\"/#/docs/class/Artist?scrollTo=getAlbums\"},\"Artist.topTracks\":{\"type\":\"method\",\"name\":\"Artist.topTracks\",\"href\":\"/#/docs/class/Artist?scrollTo=topTracks\"},\"Artist.relatedArtists\":{\"type\":\"method\",\"name\":\"Artist.relatedArtists\",\"href\":\"/#/docs/class/Artist?scrollTo=relatedArtists\"},\"Artist.token\":{\"type\":\"property\",\"name\":\"Artist.token\",\"href\":\"/#/docs/class/Artist?scrollTo=token\"},\"Album\":{\"type\":\"class\",\"name\":\"Album\",\"href\":\"/#/docs/class/Album\"},\"Album.search\":{\"type\":\"method\",\"name\":\"Album.search\",\"href\":\"/#/docs/class/Album?scrollTo=search\"},\"Album.get\":{\"type\":\"method\",\"name\":\"Album.get\",\"href\":\"/#/docs/class/Album?scrollTo=get\"},\"Album.getTracks\":{\"type\":\"method\",\"name\":\"Album.getTracks\",\"href\":\"/#/docs/class/Album?scrollTo=getTracks\"},\"Album.token\":{\"type\":\"property\",\"name\":\"Album.token\",\"href\":\"/#/docs/class/Album?scrollTo=token\"},\"Playlist\":{\"type\":\"class\",\"name\":\"Playlist\",\"href\":\"/#/docs/class/Playlist\"},\"Playlist.get\":{\"type\":\"method\",\"name\":\"Playlist.get\",\"href\":\"/#/docs/class/Playlist?scrollTo=get\"},\"Playlist.getTracks\":{\"type\":\"method\",\"name\":\"Playlist.getTracks\",\"href\":\"/#/docs/class/Playlist?scrollTo=getTracks\"},\"Playlist.getCoverImage\":{\"type\":\"method\",\"name\":\"Playlist.getCoverImage\",\"href\":\"/#/docs/class/Playlist?scrollTo=getCoverImage\"},\"Playlist.follows\":{\"type\":\"method\",\"name\":\"Playlist.follows\",\"href\":\"/#/docs/class/Playlist?scrollTo=follows\"},\"Playlist.token\":{\"type\":\"property\",\"name\":\"Playlist.token\",\"href\":\"/#/docs/class/Playlist?scrollTo=token\"},\"User\":{\"type\":\"class\",\"name\":\"User\",\"href\":\"/#/docs/class/User\"},\"User.get\":{\"type\":\"method\",\"name\":\"User.get\",\"href\":\"/#/docs/class/User?scrollTo=get\"},\"User.getPlaylists\":{\"type\":\"method\",\"name\":\"User.getPlaylists\",\"href\":\"/#/docs/class/User?scrollTo=getPlaylists\"},\"User.token\":{\"type\":\"property\",\"name\":\"User.token\",\"href\":\"/#/docs/class/User?scrollTo=token\"},\"Track\":{\"type\":\"class\",\"name\":\"Track\",\"href\":\"/#/docs/class/Track\"},\"Track.search\":{\"type\":\"method\",\"name\":\"Track.search\",\"href\":\"/#/docs/class/Track?scrollTo=search\"},\"Track.get\":{\"type\":\"method\",\"name\":\"Track.get\",\"href\":\"/#/docs/class/Track?scrollTo=get\"},\"Track.audioFeatures\":{\"type\":\"method\",\"name\":\"Track.audioFeatures\",\"href\":\"/#/docs/class/Track?scrollTo=audioFeatures\"},\"Track.audioAnalysis\":{\"type\":\"method\",\"name\":\"Track.audioAnalysis\",\"href\":\"/#/docs/class/Track?scrollTo=audioAnalysis\"},\"Track.token\":{\"type\":\"property\",\"name\":\"Track.token\",\"href\":\"/#/docs/class/Track?scrollTo=token\"},\"Episode\":{\"type\":\"class\",\"name\":\"Episode\",\"href\":\"/#/docs/class/Episode\"},\"Episode.get\":{\"type\":\"method\",\"name\":\"Episode.get\",\"href\":\"/#/docs/class/Episode?scrollTo=get\"},\"Episode.token\":{\"type\":\"property\",\"name\":\"Episode.token\",\"href\":\"/#/docs/class/Episode?scrollTo=token\"},\"Show\":{\"type\":\"class\",\"name\":\"Show\",\"href\":\"/#/docs/class/Show\"},\"Show.get\":{\"type\":\"method\",\"name\":\"Show.get\",\"href\":\"/#/docs/class/Show?scrollTo=get\"},\"Show.getEpisodes\":{\"type\":\"method\",\"name\":\"Show.getEpisodes\",\"href\":\"/#/docs/class/Show?scrollTo=getEpisodes\"},\"Show.token\":{\"type\":\"property\",\"name\":\"Show.token\",\"href\":\"/#/docs/class/Show?scrollTo=token\"},\"UserClient\":{\"type\":\"class\",\"name\":\"UserClient\",\"href\":\"/#/docs/class/UserClient\"},\"UserClient.info\":{\"type\":\"method\",\"name\":\"UserClient.info\",\"href\":\"/#/docs/class/UserClient?scrollTo=info\"},\"UserClient.getTopTracks\":{\"type\":\"method\",\"name\":\"UserClient.getTopTracks\",\"href\":\"/#/docs/class/UserClient?scrollTo=getTopTracks\"},\"UserClient.getTopArtists\":{\"type\":\"method\",\"name\":\"UserClient.getTopArtists\",\"href\":\"/#/docs/class/UserClient?scrollTo=getTopArtists\"},\"UserClient.getAffinity\":{\"type\":\"method\",\"name\":\"UserClient.getAffinity\",\"href\":\"/#/docs/class/UserClient?scrollTo=getAffinity\"},\"UserClient.getPlaylists\":{\"type\":\"method\",\"name\":\"UserClient.getPlaylists\",\"href\":\"/#/docs/class/UserClient?scrollTo=getPlaylists\"},\"UserClient.getAlbums\":{\"type\":\"method\",\"name\":\"UserClient.getAlbums\",\"href\":\"/#/docs/class/UserClient?scrollTo=getAlbums\"},\"UserClient.getTracks\":{\"type\":\"method\",\"name\":\"UserClient.getTracks\",\"href\":\"/#/docs/class/UserClient?scrollTo=getTracks\"},\"UserClient.getShows\":{\"type\":\"method\",\"name\":\"UserClient.getShows\",\"href\":\"/#/docs/class/UserClient?scrollTo=getShows\"},\"UserClient.deleteAlbum\":{\"type\":\"method\",\"name\":\"UserClient.deleteAlbum\",\"href\":\"/#/docs/class/UserClient?scrollTo=deleteAlbum\"},\"UserClient.deleteTrack\":{\"type\":\"method\",\"name\":\"UserClient.deleteTrack\",\"href\":\"/#/docs/class/UserClient?scrollTo=deleteTrack\"},\"UserClient.deleteShow\":{\"type\":\"method\",\"name\":\"UserClient.deleteShow\",\"href\":\"/#/docs/class/UserClient?scrollTo=deleteShow\"},\"UserClient.addAlbum\":{\"type\":\"method\",\"name\":\"UserClient.addAlbum\",\"href\":\"/#/docs/class/UserClient?scrollTo=addAlbum\"},\"UserClient.addTrack\":{\"type\":\"method\",\"name\":\"UserClient.addTrack\",\"href\":\"/#/docs/class/UserClient?scrollTo=addTrack\"},\"UserClient.addShow\":{\"type\":\"method\",\"name\":\"UserClient.addShow\",\"href\":\"/#/docs/class/UserClient?scrollTo=addShow\"},\"UserClient.followsUser\":{\"type\":\"method\",\"name\":\"UserClient.followsUser\",\"href\":\"/#/docs/class/UserClient?scrollTo=followsUser\"},\"UserClient.followsArtist\":{\"type\":\"method\",\"name\":\"UserClient.followsArtist\",\"href\":\"/#/docs/class/UserClient?scrollTo=followsArtist\"},\"UserClient.follows\":{\"type\":\"method\",\"name\":\"UserClient.follows\",\"href\":\"/#/docs/class/UserClient?scrollTo=follows\"},\"UserClient.followUser\":{\"type\":\"method\",\"name\":\"UserClient.followUser\",\"href\":\"/#/docs/class/UserClient?scrollTo=followUser\"},\"UserClient.followArtist\":{\"type\":\"method\",\"name\":\"UserClient.followArtist\",\"href\":\"/#/docs/class/UserClient?scrollTo=followArtist\"},\"UserClient.followPlaylist\":{\"type\":\"method\",\"name\":\"UserClient.followPlaylist\",\"href\":\"/#/docs/class/UserClient?scrollTo=followPlaylist\"},\"UserClient.follow\":{\"type\":\"method\",\"name\":\"UserClient.follow\",\"href\":\"/#/docs/class/UserClient?scrollTo=follow\"},\"UserClient.unfollowUser\":{\"type\":\"method\",\"name\":\"UserClient.unfollowUser\",\"href\":\"/#/docs/class/UserClient?scrollTo=unfollowUser\"},\"UserClient.unfollowArtist\":{\"type\":\"method\",\"name\":\"UserClient.unfollowArtist\",\"href\":\"/#/docs/class/UserClient?scrollTo=unfollowArtist\"},\"UserClient.unfollowPlaylist\":{\"type\":\"method\",\"name\":\"UserClient.unfollowPlaylist\",\"href\":\"/#/docs/class/UserClient?scrollTo=unfollowPlaylist\"},\"UserClient.unfollow\":{\"type\":\"method\",\"name\":\"UserClient.unfollow\",\"href\":\"/#/docs/class/UserClient?scrollTo=unfollow\"},\"UserClient.login\":{\"type\":\"method\",\"name\":\"UserClient.login\",\"href\":\"/#/docs/class/UserClient?scrollTo=login\"},\"UserClient.token\":{\"type\":\"property\",\"name\":\"UserClient.token\",\"href\":\"/#/docs/class/UserClient?scrollTo=token\"},\"UserClient.startedAt\":{\"type\":\"property\",\"name\":\"UserClient.startedAt\",\"href\":\"/#/docs/class/UserClient?scrollTo=startedAt\"},\"UserClient.player\":{\"type\":\"property\",\"name\":\"UserClient.player\",\"href\":\"/#/docs/class/UserClient?scrollTo=player\"},\"UserPlayer\":{\"type\":\"class\",\"name\":\"UserPlayer\",\"href\":\"/#/docs/class/UserPlayer\"},\"UserPlayer.getCurrentPlayback\":{\"type\":\"method\",\"name\":\"UserPlayer.getCurrentPlayback\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=getCurrentPlayback\"},\"UserPlayer.getDevices\":{\"type\":\"method\",\"name\":\"UserPlayer.getDevices\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=getDevices\"},\"UserPlayer.getRecentlyPlayed\":{\"type\":\"method\",\"name\":\"UserPlayer.getRecentlyPlayed\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=getRecentlyPlayed\"},\"UserPlayer.getCurrentlyPlaying\":{\"type\":\"method\",\"name\":\"UserPlayer.getCurrentlyPlaying\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=getCurrentlyPlaying\"},\"UserPlayer.play\":{\"type\":\"method\",\"name\":\"UserPlayer.play\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=play\"},\"UserPlayer.pause\":{\"type\":\"method\",\"name\":\"UserPlayer.pause\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=pause\"},\"UserPlayer.seek\":{\"type\":\"method\",\"name\":\"UserPlayer.seek\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=seek\"},\"UserPlayer.repeat\":{\"type\":\"method\",\"name\":\"UserPlayer.repeat\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=repeat\"},\"UserPlayer.setVolume\":{\"type\":\"method\",\"name\":\"UserPlayer.setVolume\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=setVolume\"},\"UserPlayer.next\":{\"type\":\"method\",\"name\":\"UserPlayer.next\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=next\"},\"UserPlayer.previous\":{\"type\":\"method\",\"name\":\"UserPlayer.previous\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=previous\"},\"UserPlayer.shuffle\":{\"type\":\"method\",\"name\":\"UserPlayer.shuffle\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=shuffle\"},\"UserPlayer.token\":{\"type\":\"property\",\"name\":\"UserPlayer.token\",\"href\":\"/#/docs/class/UserPlayer?scrollTo=token\"},\"SearchOptions\":{\"type\":\"typedef\",\"name\":\"SearchOptions\",\"href\":\"/#/docs/typedef/SearchOptions\"},\"BasicOptions\":{\"type\":\"typedef\",\"name\":\"BasicOptions\",\"href\":\"/#/docs/typedef/BasicOptions\"},\"AuthGetOptions\":{\"type\":\"typedef\",\"name\":\"AuthGetOptions\",\"href\":\"/#/docs/typedef/AuthGetOptions\"},\"AuthBuildOptions\":{\"type\":\"typedef\",\"name\":\"AuthBuildOptions\",\"href\":\"/#/docs/typedef/AuthBuildOptions\"},\"AuthRefreshOptions\":{\"type\":\"typedef\",\"name\":\"AuthRefreshOptions\",\"href\":\"/#/docs/typedef/AuthRefreshOptions\"},\"AuthRefresh\":{\"type\":\"typedef\",\"name\":\"AuthRefresh\",\"href\":\"/#/docs/typedef/AuthRefresh\"},\"FetchOptions\":{\"type\":\"typedef\",\"name\":\"FetchOptions\",\"href\":\"/#/docs/typedef/FetchOptions\"},\"RecentlyPlayedOptions\":{\"type\":\"typedef\",\"name\":\"RecentlyPlayedOptions\",\"href\":\"/#/docs/typedef/RecentlyPlayedOptions\"},\"CodeImageReturn\":{\"type\":\"typedef\",\"name\":\"CodeImageReturn\",\"href\":\"/#/docs/typedef/CodeImageReturn\"},\"DominantColor\":{\"type\":\"typedef\",\"name\":\"DominantColor\",\"href\":\"/#/docs/typedef/DominantColor\"}}","module.exports = {\r\n    Client: {\r\n        description: 'Spotify Client class to interact with spotify api! Remember client.user can only be used when you are using a scoped token.',\r\n        example: 'new Spotify.Client(\"token\")',\r\n        params: [\r\n            [\r\n                'token',\r\n                'string',\r\n                'Your oauth token',\r\n                true\r\n            ]\r\n        ],\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            },\r\n            startedAt: {\r\n                description: 'Client started at time',\r\n                type: 'number'\r\n            },\r\n            utils: {\r\n                description: \"Returns new util class\",\r\n                type: 'Util',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/util'\r\n            },\r\n            oauth: {\r\n                description: \"All authorization endpoints\",\r\n                type: 'Auth',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/auth'\r\n            },\r\n            albums: {\r\n                description: \"Album api endpoints\",\r\n                type: 'Album',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/album'\r\n            },\r\n            artists: {\r\n                description: \"Artist api endpoints\",\r\n                type: 'Artist',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/artist'\r\n            },\r\n            playlists: {\r\n                description: \"Playlist api endpoints\",\r\n                type: 'Playlist',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/playlist'\r\n            },\r\n            tracks: {\r\n                description: \"Track api endpoints\",\r\n                type: 'Track',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/track'\r\n            },\r\n            users: {\r\n                description: \"User api endpoints\",\r\n                type: 'User',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/user'\r\n            },\r\n            episodes: {\r\n                description: \"Episode api endpoints\",\r\n                type: 'Episode',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/episode'\r\n            },\r\n            shows: {\r\n                description: \"Show api endpoints\",\r\n                type: 'Show',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/show'\r\n            },\r\n            browse: {\r\n                description: \"Spotify browsing api endpoints\",\r\n                type: 'Browse',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/browse'\r\n            },\r\n            user: {\r\n                description: \"Current User api endpoints\",\r\n                type: 'UserClient',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/userclient'\r\n            }\r\n        },\r\n        getters: {\r\n            uptime: {\r\n                description: 'Uptime of the client',\r\n                type: 'number'\r\n            }\r\n        },\r\n        methods: {\r\n            search: {\r\n                description: 'Search through various types. But will not have advanced option.',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'query',\r\n                        'string',\r\n                        'Your query to search'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'SearchOptions',\r\n                        'Search options',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            login: {\r\n                description: 'Login to your spotify client.',\r\n                returns: 'void',\r\n                parameters: [\r\n                    [\r\n                        'token',\r\n                        'string',\r\n                        'Your token'\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    Auth: {\r\n        description: 'Oauth class. All auth endpoints.',\r\n        example: 'auth',\r\n        params: [\r\n            [\r\n                'token',\r\n                'string',\r\n                'Your oauth token',\r\n                true\r\n            ]\r\n        ],\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            get: {\r\n                description: \"Returns a new api auth token\",\r\n                returns: \"Promise<string>\",\r\n                parameters: [\r\n                    [\r\n                        \"options\",\r\n                        \"AuthGetOptions\",\r\n                        \"Your client secret and client id in object form\"\r\n                    ]\r\n                ]\r\n            },\r\n            refresh: {\r\n                description: \"Refreshes and gets a new authorization token at the same time can make a new scoped access_token by using code query sent by spotify authorization.\",\r\n                returns: 'Promise<AuthRefresh>',\r\n                parameters: [\r\n                    [\r\n                        'options',\r\n                        'AuthRefreshOptions',\r\n                        'Your client id, client secret and redirect uri in object form'\r\n                    ]\r\n                ]\r\n            },\r\n            build: {\r\n                description: \"Builds an Authorization String\",\r\n                returns: 'Promise<string>',\r\n                parameters: [\r\n                    [\r\n                        'options',\r\n                        'AuthBuildOptions',\r\n                        'Your client id, client secret and redirect uri in object form'\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    Util: {\r\n        description: 'Utility class. All utility methods are present here.',\r\n        example: 'new Spotify.Util(\"token\")',\r\n        params: [\r\n            [\r\n                'token',\r\n                'string',\r\n                'Your oauth token',\r\n                true\r\n            ]\r\n        ],\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            hexToRgb: {\r\n                description: 'Coverts hex code to rgb number array',\r\n                returns: 'number[]',\r\n                parameters: [\r\n                    [\r\n                        'hex',\r\n                        'string',\r\n                        'Hex code to convert'\r\n                    ]\r\n                ]\r\n            },\r\n            fetch: {\r\n                description: 'Quick method to fetch from spotify api. Will return the data required or will throw error if bad request.',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'options',\r\n                        'FetchOptions',\r\n                        'Options to fetch'\r\n                    ]\r\n                ]\r\n            },\r\n            getURIData: {\r\n                description: 'Returns the spotify uri data requested',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'uri',\r\n                        'string',\r\n                        'Uri'\r\n                    ]\r\n                ]\r\n            },\r\n            getCodeImage: {\r\n                description: 'Returns the code image url by the spotify uri',\r\n                returns: 'Promise<CodeImageReturn>',\r\n                parameters: [\r\n                    [\r\n                        'uri',\r\n                        'string',\r\n                        'Uri'\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    Browse: {\r\n        description: 'All browse endpoints in the form of class',\r\n        example: 'new Spotify.Browse(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            getCategory: {\r\n                description: 'Returns the information about the category by the id provided.',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the category'\r\n                    ]\r\n                ]\r\n            },\r\n            getCategoryPlaylists: {\r\n                description: 'Returns the playlists about the category by the id provided.',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the category'\r\n                    ],\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            categories: {\r\n                description: 'Returns the list of all categories.',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            featuredCategories: {\r\n                description: 'Returns the list of all featured categories.',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            newReleases: {\r\n                description: 'Returns the list of all new releases.',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    Artist:  {\r\n        description: 'All artist api endpoints in the form of class',\r\n        example: 'new Spotify.Artist(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            search: {\r\n                description: 'Returns search info by the query and options provided',\r\n                returns: 'Promise<any[]>',\r\n                parameters: [\r\n                    [\r\n                        'q',\r\n                        'string',\r\n                        'Query to search'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'BasicOptions',\r\n                        'Options to help your data collection better!',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            get: {\r\n                description: 'Returns artist information by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist'\r\n                    ]\r\n                ]\r\n            },\r\n            getAlbums: {\r\n                description: 'Returns the list of albums by the Spotify Artist by the artist id',\r\n                returns: 'Promise<any[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'BasicOptions',\r\n                        'Options to help your data collection better!',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            topTracks: {\r\n                description: 'Returns the top tracks of the Spotify Artist by the artist id',\r\n                returns: 'Promise<any[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'BasicOptions',\r\n                        'Options to help your data collection better!',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            relatedArtists: {\r\n                description: 'Returns list of related artists of the Spotify Artist by the artist id',\r\n                returns: 'Promise<any[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'BasicOptions',\r\n                        'Options to help your data collection better!',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n        }\r\n    },\r\n    Album:  {\r\n        description: 'All album api endpoints in the form of class',\r\n        example: 'new Spotify.Album(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            search: {\r\n                description: 'Returns albums search',\r\n                returns: 'Promise<any[]>',\r\n                parameters: [\r\n                    [\r\n                        'q',\r\n                        'string',\r\n                        'Query to search'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'BasicOptions',\r\n                        'Options to help your data collection better!',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            get: {\r\n                description: 'Returns album info by if',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the album'\r\n                    ]\r\n                ]\r\n            },\r\n            getTracks: {\r\n                description: 'Returns album tracks by album id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the album'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'BasicOptions',\r\n                        'Options to help your data collection better!',\r\n                        true\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    Playlist:  {\r\n        description: 'All playlist api endpoints in the form of class',\r\n        example: 'new Spotify.Playlist(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            get: {\r\n                description: 'Returns playlist info by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the spotify playlist'\r\n                    ]\r\n                ]\r\n            },\r\n            getTracks: {\r\n                description: 'Returns the tracks of the spotify playlist',\r\n                returns: 'Promise<any[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the spotify playlist'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'BasicOptions',\r\n                        'Options to help your data collection better!',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            getCoverImage: {\r\n                description: 'Returns the cover image of the playlist by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the spotify playlist'\r\n                    ]\r\n                ]\r\n            },\r\n            follows: {\r\n                description: 'Verify if the user follows the playlist',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the spotify playlist'\r\n                    ],\r\n                    [\r\n                        'userIds',\r\n                        'string[] or string',\r\n                        'Id of the users or user. If users use array as [userid1, userid2] else if one user just use userid1'\r\n                    ]\r\n                ]\r\n            },\r\n        }\r\n    },\r\n    User:  {\r\n        description: 'All user api endpoints in the form of class',\r\n        example: 'new Spotify.User(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            get: {\r\n                description: 'Returns the spotify user information by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the spotify user'\r\n                    ]\r\n                ]\r\n            },\r\n            getPlaylists: {\r\n                description: 'Returns the spotify user playlists by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the spotify user'\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    Track:  {\r\n        description: 'All track api endpoints in the form of class',\r\n        example: 'new Spotify.User(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            search: {\r\n                description: 'Returns search information of tracks',\r\n                returns: 'Promise<any[]>',\r\n                parameters: [\r\n                    [\r\n                        'q',\r\n                        'string',\r\n                        'Query to search'\r\n                    ],\r\n                    [\r\n                        'options',\r\n                        'BasicOptions',\r\n                        'Options to help your data collection better!',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            get: {\r\n                description: 'Returns track info by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the track'\r\n                    ]\r\n                ]\r\n            },\r\n            audioFeatures: {\r\n                description: 'Returns the audio features by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the track'\r\n                    ]\r\n                ]\r\n            },\r\n            audioAnalysis: {\r\n                description: 'Returns the audio analysis of the track by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the track'\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    Episode:  {\r\n        description: 'All episode api endpoints in the form of class',\r\n        example: 'new Spotify.Episode(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            get: {\r\n                description: 'Returns episode information by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the episode'\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    Show:  {\r\n        description: 'All show api endpoints in the form of class',\r\n        example: 'new Spotify.Show(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            get: {\r\n                description: 'Returns the show information by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the show'\r\n                    ]\r\n                ]\r\n            },\r\n            getEpisodes: {\r\n                description: 'Returns the show episodes by id',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the show'\r\n                    ],\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit of your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    UserClient:  {\r\n        description: 'All current user api endpoints in the form of class. Remember you need a scoped token to access current user api endpoints.',\r\n        example: 'new Spotify.UserClient(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            },\r\n            startedAt: {\r\n                description: 'Client started at time',\r\n                type: 'number'\r\n            },\r\n            player: {\r\n                description: 'User player. Most of the player api is available only for spotify premium users only',\r\n                type: 'UserPlayer',\r\n                href: 'https://spotify-api-js-test.netlify.app/#/class/userplayer'\r\n            }\r\n        },\r\n        getters: {\r\n            uptime: {\r\n                description: 'Uptime of the client',\r\n                type: 'number'\r\n            }\r\n        },\r\n        methods: {\r\n            info: {\r\n                description: 'Returns current user information',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            getTopTracks: {\r\n                description: 'Returns top tracks based on your affinity',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            getTopArtists: {\r\n                description: 'Returns top artists based on your affinity',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            getAffinity: {\r\n                description: 'Aliases function for getTopArtists and getTopTracks',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'type',\r\n                        '\\'artist\\' or \\'track\\'',\r\n                        'Type of affinity'\r\n                    ]\r\n                ]\r\n            },\r\n            getPlaylists: {\r\n                description: 'Returns the list of all playlists of the current user',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit of your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            getAlbums: {\r\n                description: 'Returns the list of all albums of the current user',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit of your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            getTracks: {\r\n                description: 'Returns the list of all tracks of the current user',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit of your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            getShows: {\r\n                description: 'Returns the list of all shows of the current user',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'limit',\r\n                        'number',\r\n                        'Limit of your results',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            deleteAlbum: {\r\n                description: 'Deletes your saved spotify albums',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'ids',\r\n                        'string',\r\n                        'Id of the album to delete'\r\n                    ]\r\n                ]\r\n            },\r\n            deleteTrack: {\r\n                description: 'Deletes your saved spotify tracks',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'ids',\r\n                        'string',\r\n                        'Id of the track to delete'\r\n                    ]\r\n                ]\r\n            },\r\n            deleteShow: {\r\n                description: 'Deletes your saved spotify shows',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'ids',\r\n                        'string',\r\n                        'Id of the show to delete'\r\n                    ]\r\n                ]\r\n            },\r\n            addAlbum: {\r\n                description: 'Adds spotify albums to your saved list',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'ids',\r\n                        'string',\r\n                        'Id of the album to add'\r\n                    ]\r\n                ]\r\n            },\r\n            addTrack: {\r\n                description: 'Adds spotify tracks to your saved list',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'ids',\r\n                        'string',\r\n                        'Id of the track to add'\r\n                    ]\r\n                ]\r\n            },\r\n            addShow: {\r\n                description: 'Adds spotify shows to your saved list',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'ids',\r\n                        'string',\r\n                        'Id of the show to add'\r\n                    ]\r\n                ]\r\n            },\r\n            followsUser: {\r\n                description: 'Verify if you follow a user',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the user to verify if the current user follow them'\r\n                    ]\r\n                ]\r\n            },\r\n            followsArtist: {\r\n                description: 'Verify if you follow an artist',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist or user to verify if the current user follow them'\r\n                    ],\r\n                    [\r\n                        'isArtist',\r\n                        'boolean',\r\n                        'Is the id provided is of artist then true else false, by default it is false'\r\n                    ]\r\n                ]\r\n            },\r\n            follows: {\r\n                description: 'Aliases for followsArtist and followsUser',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the user or artist to verify if the current user follow them'\r\n                    ]\r\n                ]\r\n            },\r\n            followUser: {\r\n                description: 'Follow an user',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the user'\r\n                    ]\r\n                ]\r\n            },\r\n            followArtist: {\r\n                description: 'Follow an artist',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist'\r\n                    ]\r\n                ]\r\n            },\r\n            followPlaylist: {\r\n                description: 'Follow a playlist',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the playlist'\r\n                    ]\r\n                ]\r\n            },\r\n            follow: {\r\n                description: 'Follow a artist, playlist or user',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist, playlist or user'\r\n                    ],\r\n                    [\r\n                        'type',\r\n                        '\\'artist\\', \\'user\\' or \\'playlist\\'',\r\n                        'Type of the id provided'\r\n                    ]\r\n                ]\r\n            },\r\n            unfollowUser: {\r\n                description: 'Unfollow an user',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the user'\r\n                    ]\r\n                ]\r\n            },\r\n            unfollowArtist: {\r\n                description: 'Unfollow an artist',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist'\r\n                    ]\r\n                ]\r\n            },\r\n            unfollowPlaylist: {\r\n                description: 'Unfollow a playlist',\r\n                returns: 'Promise<boolean[]>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the playlist'\r\n                    ]\r\n                ]\r\n            },\r\n            unfollow: {\r\n                description: 'Unfollow a artist, playlist or user',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'id',\r\n                        'string',\r\n                        'Id of the artist, playlist or user'\r\n                    ],\r\n                    [\r\n                        'type',\r\n                        '\\'artist\\', \\'user\\' or \\'playlist\\'',\r\n                        'Type of the id provided'\r\n                    ]\r\n                ]\r\n            },\r\n            login: {\r\n                description: 'Make a new login by refreshing the token. Similar to Auth.refresh',\r\n                returns: 'void',\r\n                parameters: [\r\n                    [\r\n                        'options',\r\n                        'AuthRefreshOptions',\r\n                        'Options to login'\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    UserPlayer:  {\r\n        description: 'All player api endpoints in the form of class. Remember you need a scoped token to access current user api endpoints.',\r\n        example: 'new Spotify.UserPlayer(\"token\")',\r\n        properties: {\r\n            token: {\r\n                description: \"Your auth token\",\r\n                type: \"string\"\r\n            }\r\n        },\r\n        methods: {\r\n            getCurrentPlayback: {\r\n                description: 'Returns current playback',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            getDevices: {\r\n                description: 'Returns the active devices on spotify',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            getRecentlyPlayed: {\r\n                description: 'Returns recently played data',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'options',\r\n                        'RecentlyPlayedOptions',\r\n                        'Filter the data by selecting options',\r\n                        true\r\n                    ]\r\n                ]\r\n            },\r\n            getCurrentlyPlaying: {\r\n                description: 'Returns currently playing track and data',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            play: {\r\n                description: 'Plays the player',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            pause: {\r\n                description: 'Pauses the player',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            seek: {\r\n                description: 'Seeks the player to the position provided',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'position',\r\n                        'number',\r\n                        'Position in ms to seek the player'\r\n                    ]\r\n                ]\r\n            },\r\n            repeat: {\r\n                description: 'Repeats the player',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'type',\r\n                        '\\'track\\' or \\'context\\' or \\'off\\'',\r\n                        'Type of repeat'\r\n                    ]\r\n                ]\r\n            },\r\n            setVolume: {\r\n                description: 'Set volume to the player',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'volume',\r\n                        'number',\r\n                        'Volume to set'\r\n                    ]\r\n                ]\r\n            },\r\n            next: {\r\n                description: 'Plays next track',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            previous: {\r\n                description: 'Plays the previous track',\r\n                returns: 'Promise<any>',\r\n                parameters: []\r\n            },\r\n            shuffle: {\r\n                description: 'Shuffles the playback',\r\n                returns: 'Promise<any>',\r\n                parameters: [\r\n                    [\r\n                        'state',\r\n                        'boolean',\r\n                        'State while shuffling'\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}","module.exports = {\r\n    SearchOptions: {\r\n        description: 'Search options object structure.',\r\n        parameters: [\r\n            [\r\n                'limit',\r\n                'number',\r\n                'Limit of results',\r\n                true\r\n            ],\r\n            [\r\n                'type',\r\n                'string[]',\r\n                'Type of search',\r\n                true\r\n            ]\r\n        ]\r\n    },\r\n    BasicOptions: {\r\n        description: 'Advanced search options object structure.',\r\n        parameters: [\r\n            [\r\n                'limit',\r\n                'number',\r\n                'Limit of results',\r\n                true\r\n            ],\r\n            [\r\n                'advanced',\r\n                'boolean',\r\n                'Making advanced option to true will return you the codeImage and dominantColor with it'\r\n            ]\r\n        ]\r\n    },\r\n    AuthGetOptions: {\r\n        description: 'Auth.get options object structure.',\r\n        parameters: [\r\n            [\r\n                'client_id',\r\n                'string',\r\n                'Your spotify app client id'\r\n            ],\r\n            [\r\n                'client_secret',\r\n                'string',\r\n                'Your spotify app client secret'\r\n            ]\r\n        ]\r\n    },\r\n    AuthBuildOptions: {\r\n        description: 'Auth.build options object structure.',\r\n        parameters: [\r\n            [\r\n                'client_id',\r\n                'string',\r\n                'Your spotify app client id'\r\n            ],\r\n            [\r\n                'redirect_uri',\r\n                'string',\r\n                'Url where the user will be redirect after the login'\r\n            ],\r\n            [\r\n                'scopes',\r\n                'string',\r\n                'The scopes you need from the user while authorizing in a string in the format of \"scope1 scope2\"',\r\n                true\r\n            ]\r\n        ]\r\n    },\r\n    AuthRefreshOptions: {\r\n        description: 'Auth.refresh options object structure.',\r\n        parameters: [\r\n            [\r\n                'client_id',\r\n                'string',\r\n                'Your spotify app client id'\r\n            ],\r\n            [\r\n                'client_secret',\r\n                'string',\r\n                'Your spotify app client secret'\r\n            ],\r\n            [\r\n                'code',\r\n                'string',\r\n                'Code query sent by the spotify authorization. You can use the refresh_token also to get a new access_token.'\r\n            ],\r\n            [\r\n                'redirect_uri',\r\n                'string',\r\n                'This redirect uri would not actually redirect you. This is only for validation. You need to enter the same uri/url used in the authorization link or Auth.build'\r\n            ]\r\n        ]\r\n    },\r\n    AuthRefresh: {\r\n        description: 'Object structure returned by Auth.refresh.',\r\n        parameters: [\r\n            [\r\n                'access_token',\r\n                'string',\r\n                'User access token'\r\n            ],\r\n            [\r\n                'token_type',\r\n                'string',\r\n                'Type of the token'\r\n            ],\r\n            [\r\n                'expires_in',\r\n                'number',\r\n                'Time in which the access_token expires'\r\n            ],\r\n            [\r\n                'refresh_token',\r\n                'string',\r\n                'Token which you can use to refresh in options.code and get a new token using Auth.refresh method'\r\n            ],\r\n            [\r\n                'scope',\r\n                'string',\r\n                'Authorization scopes you have requested'\r\n            ]\r\n        ]\r\n    },\r\n    FetchOptions: {\r\n        description: 'Util.fetch options object structure.',\r\n        parameters: [\r\n            [\r\n                'link',\r\n                'string',\r\n                'Link after https://api.spotify.com/'\r\n            ],\r\n            [\r\n                'params',\r\n                'object',\r\n                'All the query parameters in object form',\r\n                true\r\n            ],\r\n            [\r\n                'headers',\r\n                'object',\r\n                'Additional headers than Authorization header',\r\n                true\r\n            ],\r\n            [\r\n                'method',\r\n                'string',\r\n                'By default the fetch methods uses GET method. You can set your own method',\r\n                true\r\n            ]\r\n        ]\r\n    },\r\n    RecentlyPlayedOptions: {\r\n        description: 'UserPlayer.getRecentlyPlayed options object structure',\r\n        parameters: [\r\n            [\r\n                'limit',\r\n                'number',\r\n                'Limit of your results',\r\n                true\r\n            ],\r\n            [\r\n                'after',\r\n                'any',\r\n                'Filters results by after time',\r\n                true\r\n            ],\r\n            [\r\n                'before',\r\n                'any',\r\n                'Filters results by before time',\r\n                true\r\n            ]\r\n        ]\r\n    },\r\n    CodeImageReturn: {\r\n        description: 'Return object data by code image',\r\n        parameters: [\r\n            [\r\n                'image',\r\n                'string',\r\n                'The actual code image'\r\n            ],\r\n            [\r\n                'dominantColor',\r\n                'DominantColor',\r\n                'The dominant color of the coverpage'\r\n            ]\r\n        ]\r\n    },\r\n    DominantColor: {\r\n        description: 'dominantColor object structure of CodeImageReturn typedef',\r\n        parameters: [\r\n            [\r\n                'hex',\r\n                'string',\r\n                'Dominant color in hex code'\r\n            ],\r\n            [\r\n                'rgb',\r\n                'number[]',\r\n                'Dominant color in rgb with alpha'\r\n            ]\r\n        ]\r\n    }\r\n};","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\n\r\nexport default function CoverPage(){\r\n    return <>\r\n        <div id=\"coverpage\" align=\"center\" style={{ borderRadius: 0, position: 'absolute', top: 0, left: 0, right: 0, paddingBottom: '50px', background: 'linear-gradient(to left bottom, hsl(133, 100%, 85%) 0%,hsl(128, 100%, 85%) 100%)' }}>\r\n            <div style={{ position: 'absolute', left: 0, top: 0, right: 0, height: '40px' }}>\r\n                <div style={{ position: 'absolute', top: '20px', right: '20px' }}>\r\n                    <a className=\"header-link active\" href=\"/\">Home</a>\r\n                    <a className=\"header-link\" href=\"https://github.com/spotify-api/spotify-api.js\">GitHub</a>\r\n                    <a className=\"header-link\" href=\"https://npmjs.com/spotify-api.js\">NPM</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"cover\">\r\n               <h1 class=\"cover-title\"><font style={{ color: 'var(--theme-color)' }}>Spotify</font>Api<img src=\"https://avatars0.githubusercontent.com/u/71826863?s=400&u=c871a66a95a2ca7e9b0f072aa9635b31fbc1e800&v=4\" width=\"20px\"/><font>JS</font></h1>\r\n               <p class=\"cover-description\">A complete node js wrapper of spotify api with oauth support</p>\r\n               <code style={{ background: '#f5f5f5', padding: '16px', borderRadius: '5px', position: 'relative', top: '10px', overflow: 'auto' }}>npm install spotify-api.js</code>\r\n            </div>\r\n        </div>\r\n    </>\r\n};","import React from 'react';\r\n\r\nexport default function Footer(){\r\n    return <>\r\n        <div className=\"jumbotron footer\">\r\n            <font><strong>Spotify-api.js</strong></font>\r\n            <p>A powerful node.js library to interact with spotify api</p>\r\n            <p>Site made by <a href=\"https://decimaldev.xyz/\" style={{ color: '#888' }}><strong>Decimal Development</strong></a></p>\r\n        </div>\r\n    </>\r\n};","/* eslint-disable no-template-curly-in-string */\r\nexport function highlight() {\r\n    document.querySelectorAll('.js').forEach(x => {\r\n        if(x.innerHTML.includes(`<!-- updated -->`)) return;\r\n\r\n        x.innerHTML = `<!-- updated -->` + x.innerHTML\r\n        .replace(/\\n/, '<br/>')\r\n        .replace(/\"(.*?)\"/g, '<font style=\"color: #42b983;\">\"$1\"</font>')\r\n        .replace(/'(.*?)'/g, '<font style=\"color: #42b983;\">\\'$1\\'</font>')\r\n        .replace(/`(.*?)`/g, '<font style=\"color: #42b983;\">`$1`</font>')\r\n        .replace(/\\${(.*?)}/g, '<font style=\"color: violet;\">${$1}</font>')\r\n        .replace(/\\basync\\b/g, '<font style=\"color: #e96900;\">async</font>')\r\n        .replace(/\\bfunction[\\s]*([a-zA-Z0-9$().;:&,=' ])\\b/g, '<font style=\"color: #e96900;\">function </font>')\r\n        .replace(/\\/\\/[\\s]*([a-zA-Z0-9$().;:&,=' ]{1,})/g, '<font style=\"color: grey\">// $1</font>')\r\n        .replace(/\\bconsole\\b/g, '<font style=\"color: #e96900;\">console</font>')\r\n        .replace(/\\bnew\\b/g, '<font style=\"color: #e96900;\">new</font>')\r\n        .replace(/\\brequire\\b/g, '<font style=\"color: #e96900;\">require</font>')\r\n        .replace(/\\bconst\\b/g, '<font style=\"color: #e96900;\">const</font>')\r\n        .replace(/\\bthen\\b/g, '<font style=\"color: #e96900;\">then</font>')\r\n        .replace(/\\bcatch\\b/g, '<font style=\"color: #e96900;\">catch</font>')\r\n        .replace(/\\bawait\\b/g, '<font style=\"color: #e96900;\">await</font>')\r\n    });\r\n};","import React from 'react';\r\n\r\nimport CoverPage from './components/coverpage';\r\nimport Footer from './components/footer';\r\nimport { highlight } from './Script';\r\n\r\nclass App extends React.Component{\r\n\r\n    componentDidMount(){\r\n        const SL = ', 100%, 85%';\r\n        try{\r\n            document.getElementById('coverpage').style.background = 'linear-gradient(to left bottom, ' +\r\n            `hsl(${Math.floor(Math.random() * 255) + SL}) 0%,` +\r\n            `hsl(${Math.floor(Math.random() * 255) + SL}) 100%)`\r\n        }catch(e){};\r\n        highlight();\r\n    };\r\n\r\n    render(){\r\n\r\n        return <>\r\n            <CoverPage/>\r\n\r\n            <div className=\"home-content\">\r\n                <div>\r\n                    <div>\r\n                        <h2>About</h2>\r\n                        <p>\r\n                            A powerful <a href=\"https://nodejs.org/en/\">node.js</a> library to interact with\r\n                            spotify api very quick and fast.\r\n\r\n                            <ul>\r\n                                <li>Object Oriented</li>\r\n                                <li>100% Promised based</li>\r\n                                <li>Covers all the spotify api endpoints</li>\r\n                            </ul>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Example</h2>\r\n                        <pre className=\"js\">\r\n                            const Spotify = require('spotify-api.js');<br/>\r\n                            const client = new Spotify.Client('token');<br/><br/>\r\n\r\n                            client.tracks.search('some-search')<br/>\r\n                            .then(console.log)<br/>\r\n                            .catch(console.log)\r\n                        </pre>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-links\">\r\n                    <a href=\"/#/docs/class/client\">Get Started</a>\r\n                    <a href=\"https://discord.gg/FrduEZd\">Discord</a>\r\n                </div>\r\n            </div>\r\n\r\n            <Footer/>\r\n        </>\r\n    };\r\n\r\n};\r\n\r\nexport default App;","/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\n\r\nexport default function Header(){\r\n    return <>\r\n        <div className=\"header\">\r\n            <div style={{ position: 'absolute', top: 4, left: '20px' }}>\r\n                <a href=\"/\" style={{ cursor: 'pointer' }}>\r\n                    <h1 style={{ fontSize: '20px', fontWeight: 'bolder' }}><font style={{ color: 'var(--theme-color)' }}>Spotify</font><font style={{ color: '#34495e' }}>Api<img src=\"https://avatars0.githubusercontent.com/u/71826863?s=400&u=c871a66a95a2ca7e9b0f072aa9635b31fbc1e800&v=4\" width=\"8px\"/>JS</font></h1>\r\n                </a>\r\n            </div>\r\n            <div style={{ position: 'absolute', top: '20px', right: '20px' }}>\r\n                <a className=\"header-link active\" href=\"/\">Home</a>\r\n                <a className=\"header-link\" href=\"https://github.com/spotify-api/spotify-api.js\">GitHub</a>\r\n                <a className=\"header-link\" href=\"/#/docs/search\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i></a>\r\n            </div>\r\n        </div>\r\n    </>\r\n};","/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-restricted-globals */\r\nimport React from 'react';\r\nimport Header from './components/header';\r\n\r\nlet sidebarOpen = true;\r\nif(innerWidth < 700) sidebarOpen = false;\r\n\r\nconst resize = _ => {\r\n    if(sidebarOpen){\r\n        document.getElementById('doc-section').style.width = (innerWidth - 400) + 'px';\r\n        document.getElementById('doc-sidebar').style.display = 'block';\r\n    }\r\n    else {\r\n        document.getElementById('doc-section').style.width = (innerWidth < 600) ? '80%' : '100%';\r\n        document.getElementById('doc-sidebar').style.display = 'none';\r\n    };\r\n};\r\n\r\nconst sidebar = _ => {\r\n    if(!sidebarOpen){\r\n        sidebarOpen = true;\r\n        document.getElementById('doc-section').style.width = (innerWidth - 400) + 'px';\r\n        document.getElementById('doc-sidebar').style.display = 'block';\r\n    }else{\r\n        sidebarOpen = false;\r\n        document.getElementById('doc-sidebar').style.display = 'none'\r\n        document.getElementById('doc-section').style.width = (innerWidth < 600) ? '80%' : '90%'\r\n    };\r\n};\r\n\r\nclass Page extends React.Component{\r\n\r\n    componentDidMount(){\r\n        resize();\r\n\r\n        const scrollTo = () => {\r\n            let queries = new URLSearchParams(location.href.split('?')[1]);\r\n            let element = document.getElementById(queries.get('scrollTo'));\r\n            if(element) element.scrollIntoView();\r\n        }\r\n\r\n        window.addEventListener('resize', resize);\r\n        window.addEventListener('load', scrollTo);\r\n        window.addEventListener('hashchange', scrollTo);\r\n    };\r\n\r\n    render(){\r\n        return <>\r\n            <div>\r\n                <div className=\"sidebar\"></div>\r\n                <div>\r\n                    <Header/>\r\n                    <div id=\"doc-sidebar\">\r\n                        <div style={{ marginTop: '50px' }}>\r\n                            <this.props.sidebar/>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"doc-section\" style={{ marginTop: '60px', width: '100%' }}>\r\n                        {this.props.children}\r\n                        <div style={{ marginTop: '50px', height: '60px' }}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"nav-btn\">\r\n                <a onClick={sidebar}><i className=\"fa fa-bars fa-2x\" aria-hidden=\"true\"></i></a>\r\n            </div>\r\n        </>\r\n    };\r\n\r\n};\r\n\r\nexport default Page;","/* eslint-disable default-case */\r\nimport React from 'react';\r\nimport Page from './Page';\r\nimport { highlight } from './Script';\r\n\r\nclass Docs extends React.Component{\r\n\r\n    componentDidMount(){\r\n        highlight();\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        highlight();\r\n    };\r\n\r\n    render(){\r\n        let DocSection = _ =><h2>404 - Not Found</h2>;\r\n\r\n        switch(this.props.docType){\r\n            case 'class':\r\n                DocSection = () => {\r\n                    const data = [];\r\n                    let cls = this.props.class;\r\n\r\n                    data.push(<h1>{this.props.className}</h1>);\r\n                    data.push(cls.description);\r\n\r\n                    const properties = Object.keys(cls.properties);\r\n                    const methods = Object.keys(cls.methods);\r\n                    const getters = cls.getters ? Object.keys(cls.getters) : null;\r\n\r\n                    data.push(\r\n                        <blockquote>\r\n                            <strong>Properties:</strong> {properties.join(', ')}<br/>\r\n                            <strong>Methods:</strong> {methods.join(', ')}\r\n                            { getters ? <><br/><strong>Getters:</strong> <font>{getters.join(', ')}</font></> : '' }\r\n                        </blockquote>\r\n                    );\r\n                    data.push(<pre className=\"js\">new Spotify.{this.props.className}('token');</pre>)\r\n\r\n                    data.push(<hr/>);\r\n                    data.push(<h2>Properties</h2>);\r\n\r\n                    properties.forEach(property => {\r\n                        data.push(<h3 className=\"light\" id={property.toLowerCase()}>.{property}</h3>);\r\n                        property = cls.properties[property];\r\n                        data.push(\r\n                            <blockquote>\r\n                                {property.description}<br/>\r\n                                <strong>Type:</strong> <font className=\"type\">{\r\n                                    property.href ?\r\n                                    <a href={property.href}>{property.type}</a> :\r\n                                    property.type\r\n                                }</font>\r\n                            </blockquote>\r\n                        );\r\n                    });\r\n\r\n                    data.push(<hr/>);\r\n                    data.push(<h2>Methods</h2>);\r\n\r\n                    methods.forEach(method => {\r\n                        let methodName = method;\r\n                        method = cls.methods[method];\r\n                        data.push(<h3 className=\"light\" id={methodName.toLowerCase()}>.{methodName}(<font style={{ opacity: 0.7 }}>{method.parameters.map(x => x[0]).join(', ')}</font>)</h3>);\r\n\r\n                        data.push(\r\n                            <blockquote>\r\n                                {method.description}<br/><br/>\r\n                                <table>\r\n                                    <tr>\r\n                                        <th>PARAMETER</th>\r\n                                        <th>TYPE</th>\r\n                                        <th>DESCRIPTION</th>\r\n                                    </tr>\r\n                                    {\r\n                                        method.parameters.map(x => \r\n                                            <tr>\r\n                                                <td>{x[0]}</td>\r\n                                                <td><font className=\"type\">{x[1]}</font></td>\r\n                                                <td>{x[3] ? 'Optional. ' : ''}{x[2]}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </table><br/>\r\n                                <strong>Returns:</strong> <font className=\"type\">{method.returns}</font>\r\n                            </blockquote>\r\n                        );\r\n                    });\r\n\r\n                    return data;\r\n                };\r\n                break;\r\n\r\n            case 'typedef':\r\n                DocSection = _ => {\r\n                    let typedef = this.props.typedef;\r\n                    return (\r\n                        <>\r\n                            <h1>{this.props.typedefName}</h1>\r\n                            <blockquote>\r\n                               {typedef.description}<br/><br/>\r\n                               <table>\r\n                                    <tr>\r\n                                        <th>PARAMETER</th>\r\n                                        <th>TYPE</th>\r\n                                        <th>DESCRIPTION</th>\r\n                                    </tr>\r\n                                    {\r\n                                        typedef.parameters.map(x => \r\n                                            <tr>\r\n                                                <td>{x[0]}</td>\r\n                                                <td className=\"type\">{x[1]}</td>\r\n                                                <td>{x[3] ? 'Optional. ' : ''}{x[2]}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </table><br/>\r\n                            </blockquote>\r\n                        </>\r\n                    );\r\n                };\r\n                break;\r\n        };\r\n\r\n        return <>\r\n            <Page sidebar={this.props.sidebar}><DocSection/></Page>\r\n        </>\r\n    };\r\n\r\n};\r\n\r\nexport default Docs;","/* eslint-disable default-case */\r\nimport React from 'react';\r\nimport Page from './Page';\r\n\r\nimport Markdown from 'react-showdown';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { highlight } from './Script';\r\n\r\nclass Guide extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { guide: 'Loading...', highlight: false };\r\n        this.hashDidChange = _ => {\r\n            if(!this.props.guide) return this.setState({ guide: '<h2>404 - Not Found</h2>' });\r\n            fetch(`/guides/${this.props.guide}.md`)\r\n            .then(res => res.text())\r\n            .then(body => {\r\n                this.setState({ guide: body });\r\n                highlight();\r\n            });\r\n        };\r\n    };\r\n\r\n    componentWillMount(){\r\n        if(!this.props.guide) return this.setState({ guide: '<h2>404 - Not Found</h2>' });\r\n        fetch(`/guides/${this.props.guide}.md`)\r\n        .then(res => res.text())\r\n        .then(body => {\r\n            this.setState({ guide: body })\r\n            highlight();\r\n        });\r\n        window.addEventListener('hashchange', this.hashDidChange);\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('hashchange', this.hashDidChange);\r\n    };\r\n\r\n    render(){\r\n        return <>\r\n            <Page sidebar={this.props.sidebar}>\r\n                <Markdown markdown={this.state.guide}/>\r\n            </Page>\r\n        </>\r\n    };\r\n\r\n};\r\n\r\nexport default Guide;","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport Page from './Page';\r\n\r\nconst path = require('./data/path');\r\n\r\nconst typeColors = {\r\n    'class': '#0c7cd5',\r\n    'typedef': '#94508c',\r\n    'method': '#ee6a2d',\r\n    'property': '#00afa0'\r\n}\r\n\r\nclass Search extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { search: null };\r\n        this.pathKeys = Object.keys(path);\r\n        this.load = _ => {\r\n            document.getElementById('search-box').addEventListener('keypress', e => {\r\n                if(e.code != 'Enter') return;\r\n                let search = document.getElementById('search-box').value;\r\n                let res = this.pathKeys\r\n                .filter(x => x.toLowerCase().startsWith(search.toLowerCase()))\r\n                .map(x => {\r\n                    x = path[x];\r\n    \r\n                    return <>\r\n                        <div className=\"search-result-box\">\r\n                            <div className=\"type-block\" style={{ background: typeColors[x.type] }}>{x.type[0].toUpperCase()}</div>  <a href={x.href}>{x.name}</a>\r\n                        </div>\r\n                    </>\r\n                });\r\n                this.setState({ search: res })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.load();\r\n    };\r\n\r\n    render(){\r\n        let search = this.state.search;\r\n\r\n        return <>\r\n            <Page sidebar={this.props.sidebar}>\r\n                <input type=\"text\" placeholder=\"Your Search...\" id=\"search-box\"></input>\r\n                <h2><font id=\"result-limit\">{ search ? search.length : 0 }</font> Results found</h2>\r\n                {\r\n                    search || ''\r\n                }\r\n            </Page>\r\n        </>\r\n    };\r\n\r\n};\r\n\r\nexport default Search;","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, Route, useParams } from \"react-router-dom\";\r\n\r\nimport './main.css';\r\nimport App from './App';\r\nimport DocPage from './Docs';\r\nimport GuidePage from './GuidePage';\r\nimport SearchPage from './Search';\r\n\r\nlet classDoc = require('./data/classes');\r\nlet typedefDoc = require('./data/typedefs');\r\nlet guides = [\r\n    'Spotify-Auth',\r\n    'Ping'\r\n];\r\n\r\nconst sidebar = y => (\r\n    <div className=\"sidebar-section\">\r\n        <a href=\"/#/docs/class/client\" className=\"sidebar-heads\">CLASSES</a>\r\n        <div style={{ marginLeft: '20px' }}>\r\n            {\r\n                Object.keys(classDoc).map(x => (\r\n                   <><a href={`/#/docs/class/${x}`} className={y == x ? 'sidebar-active' : ''}>{x}</a><br/></>\r\n                ))\r\n           } \r\n        </div>\r\n        <div style={{ height: '20px'}}></div>\r\n        <a href=\"/#/docs/typedef/SearchOptions\" className=\"sidebar-heads\">TYPEDEFS</a>\r\n        <div style={{ marginLeft: '20px' }}>\r\n            {\r\n                Object.keys(typedefDoc).map(x => (\r\n                   <><a href={`/#/docs/typedef/${x}`} className={y == x ? 'sidebar-active' : ''}>{x}</a><br/></>\r\n                ))\r\n            } \r\n        </div>\r\n        <div style={{ height: '20px'}}></div>\r\n        <a href=\"/#/docs/guide/spotify-auth\" className=\"sidebar-heads\">GUIDES</a>\r\n        <div style={{ marginLeft: '20px' }}>\r\n            {\r\n                guides.map(x => {\r\n                    let xLower = x.toLowerCase();\r\n                    return <><a href={`/#/docs/guide/${xLower}`} className={y == xLower ? 'sidebar-active' : ''}>{x.replace(/-/g, ' ')}</a><br/></> \r\n                })\r\n            } \r\n        </div>\r\n        <div style={{ height: '30px'}}></div>\r\n    </div>\r\n);\r\n\r\nReactDOM.render(\r\n    <HashRouter basename='/'>\r\n        <Route exact path=\"/\" component={App}/>\r\n        <Route path=\"/docs/class/:className\" component={() => {\r\n            let { className } = useParams();\r\n            className = className[0].toUpperCase() + className.slice(1);\r\n            let classData = classDoc[className];\r\n            if(!classData) return <DocPage sidebar={sidebar}/>;\r\n            return <DocPage \r\n                docType=\"class\" \r\n                class={classData} \r\n                className={className} \r\n                sidebar={_ => sidebar(className)}\r\n            />;\r\n        }}/>\r\n        <Route path=\"/docs/typedef/:typedefName\" component={() => {\r\n            let { typedefName } = useParams();\r\n            let typeData = typedefDoc[typedefName];\r\n            if(!typeData) return <DocPage sidebar={sidebar}/>;\r\n            return <DocPage \r\n                docType=\"typedef\" \r\n                typedef={typeData}\r\n                typedefName={typedefName}\r\n                sidebar={_ => sidebar(typedefName)}\r\n            />;\r\n        }}/>\r\n        <Route path=\"/docs/guide/:guideName\" component={() => {\r\n            let { guideName } = useParams();\r\n            if(!guides.map(x => x.toLowerCase()).includes(guideName)) return <DocPage sidebar={sidebar}/>;\r\n            return <GuidePage \r\n                guide={guideName} \r\n                sidebar={_ => sidebar(guideName)}\r\n            />;\r\n        }}/>\r\n        <Route path=\"/docs/search\" component={() => <SearchPage sidebar={sidebar}/>}/>\r\n    </HashRouter>,\r\n    document.getElementById('app')\r\n);"],"sourceRoot":""}
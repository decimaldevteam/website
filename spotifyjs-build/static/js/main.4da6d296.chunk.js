(this.webpackJsonpapp=this.webpackJsonpapp||[]).push([[0],{44:function(e,t,s){},55:function(e,t){},58:function(e,t){e.exports={Client:{type:"class",name:"Client",href:"/#/docs/class/Client"},"Client.search":{type:"method",name:"Client.search",href:"/#/docs/class/Client?scrollTo=search"},"Client.login":{type:"method",name:"Client.login",href:"/#/docs/class/Client?scrollTo=login"},"Client.token":{type:"property",name:"Client.token",href:"/#/docs/class/Client?scrollTo=token"},"Client.startedAt":{type:"property",name:"Client.startedAt",href:"/#/docs/class/Client?scrollTo=startedAt"},"Client.utils":{type:"property",name:"Client.utils",href:"/#/docs/class/Client?scrollTo=utils"},"Client.oauth":{type:"property",name:"Client.oauth",href:"/#/docs/class/Client?scrollTo=oauth"},"Client.albums":{type:"property",name:"Client.albums",href:"/#/docs/class/Client?scrollTo=albums"},"Client.artists":{type:"property",name:"Client.artists",href:"/#/docs/class/Client?scrollTo=artists"},"Client.playlists":{type:"property",name:"Client.playlists",href:"/#/docs/class/Client?scrollTo=playlists"},"Client.tracks":{type:"property",name:"Client.tracks",href:"/#/docs/class/Client?scrollTo=tracks"},"Client.users":{type:"property",name:"Client.users",href:"/#/docs/class/Client?scrollTo=users"},"Client.episodes":{type:"property",name:"Client.episodes",href:"/#/docs/class/Client?scrollTo=episodes"},"Client.shows":{type:"property",name:"Client.shows",href:"/#/docs/class/Client?scrollTo=shows"},"Client.browse":{type:"property",name:"Client.browse",href:"/#/docs/class/Client?scrollTo=browse"},"Client.user":{type:"property",name:"Client.user",href:"/#/docs/class/Client?scrollTo=user"},Auth:{type:"class",name:"Auth",href:"/#/docs/class/Auth"},"Auth.get":{type:"method",name:"Auth.get",href:"/#/docs/class/Auth?scrollTo=get"},"Auth.refresh":{type:"method",name:"Auth.refresh",href:"/#/docs/class/Auth?scrollTo=refresh"},"Auth.build":{type:"method",name:"Auth.build",href:"/#/docs/class/Auth?scrollTo=build"},"Auth.token":{type:"property",name:"Auth.token",href:"/#/docs/class/Auth?scrollTo=token"},Util:{type:"class",name:"Util",href:"/#/docs/class/Util"},"Util.hexToRgb":{type:"method",name:"Util.hexToRgb",href:"/#/docs/class/Util?scrollTo=hexToRgb"},"Util.fetch":{type:"method",name:"Util.fetch",href:"/#/docs/class/Util?scrollTo=fetch"},"Util.getURIData":{type:"method",name:"Util.getURIData",href:"/#/docs/class/Util?scrollTo=getURIData"},"Util.getCodeImage":{type:"method",name:"Util.getCodeImage",href:"/#/docs/class/Util?scrollTo=getCodeImage"},"Util.token":{type:"property",name:"Util.token",href:"/#/docs/class/Util?scrollTo=token"},Browse:{type:"class",name:"Browse",href:"/#/docs/class/Browse"},"Browse.getCategory":{type:"method",name:"Browse.getCategory",href:"/#/docs/class/Browse?scrollTo=getCategory"},"Browse.getCategoryPlaylists":{type:"method",name:"Browse.getCategoryPlaylists",href:"/#/docs/class/Browse?scrollTo=getCategoryPlaylists"},"Browse.categories":{type:"method",name:"Browse.categories",href:"/#/docs/class/Browse?scrollTo=categories"},"Browse.featuredCategories":{type:"method",name:"Browse.featuredCategories",href:"/#/docs/class/Browse?scrollTo=featuredCategories"},"Browse.newReleases":{type:"method",name:"Browse.newReleases",href:"/#/docs/class/Browse?scrollTo=newReleases"},"Browse.token":{type:"property",name:"Browse.token",href:"/#/docs/class/Browse?scrollTo=token"},Artist:{type:"class",name:"Artist",href:"/#/docs/class/Artist"},"Artist.search":{type:"method",name:"Artist.search",href:"/#/docs/class/Artist?scrollTo=search"},"Artist.get":{type:"method",name:"Artist.get",href:"/#/docs/class/Artist?scrollTo=get"},"Artist.getAlbums":{type:"method",name:"Artist.getAlbums",href:"/#/docs/class/Artist?scrollTo=getAlbums"},"Artist.topTracks":{type:"method",name:"Artist.topTracks",href:"/#/docs/class/Artist?scrollTo=topTracks"},"Artist.relatedArtists":{type:"method",name:"Artist.relatedArtists",href:"/#/docs/class/Artist?scrollTo=relatedArtists"},"Artist.token":{type:"property",name:"Artist.token",href:"/#/docs/class/Artist?scrollTo=token"},Album:{type:"class",name:"Album",href:"/#/docs/class/Album"},"Album.search":{type:"method",name:"Album.search",href:"/#/docs/class/Album?scrollTo=search"},"Album.get":{type:"method",name:"Album.get",href:"/#/docs/class/Album?scrollTo=get"},"Album.getTracks":{type:"method",name:"Album.getTracks",href:"/#/docs/class/Album?scrollTo=getTracks"},"Album.token":{type:"property",name:"Album.token",href:"/#/docs/class/Album?scrollTo=token"},Playlist:{type:"class",name:"Playlist",href:"/#/docs/class/Playlist"},"Playlist.get":{type:"method",name:"Playlist.get",href:"/#/docs/class/Playlist?scrollTo=get"},"Playlist.getTracks":{type:"method",name:"Playlist.getTracks",href:"/#/docs/class/Playlist?scrollTo=getTracks"},"Playlist.getCoverImage":{type:"method",name:"Playlist.getCoverImage",href:"/#/docs/class/Playlist?scrollTo=getCoverImage"},"Playlist.follows":{type:"method",name:"Playlist.follows",href:"/#/docs/class/Playlist?scrollTo=follows"},"Playlist.token":{type:"property",name:"Playlist.token",href:"/#/docs/class/Playlist?scrollTo=token"},User:{type:"class",name:"User",href:"/#/docs/class/User"},"User.get":{type:"method",name:"User.get",href:"/#/docs/class/User?scrollTo=get"},"User.getPlaylists":{type:"method",name:"User.getPlaylists",href:"/#/docs/class/User?scrollTo=getPlaylists"},"User.token":{type:"property",name:"User.token",href:"/#/docs/class/User?scrollTo=token"},Track:{type:"class",name:"Track",href:"/#/docs/class/Track"},"Track.search":{type:"method",name:"Track.search",href:"/#/docs/class/Track?scrollTo=search"},"Track.get":{type:"method",name:"Track.get",href:"/#/docs/class/Track?scrollTo=get"},"Track.audioFeatures":{type:"method",name:"Track.audioFeatures",href:"/#/docs/class/Track?scrollTo=audioFeatures"},"Track.audioAnalysis":{type:"method",name:"Track.audioAnalysis",href:"/#/docs/class/Track?scrollTo=audioAnalysis"},"Track.token":{type:"property",name:"Track.token",href:"/#/docs/class/Track?scrollTo=token"},Episode:{type:"class",name:"Episode",href:"/#/docs/class/Episode"},"Episode.get":{type:"method",name:"Episode.get",href:"/#/docs/class/Episode?scrollTo=get"},"Episode.token":{type:"property",name:"Episode.token",href:"/#/docs/class/Episode?scrollTo=token"},Show:{type:"class",name:"Show",href:"/#/docs/class/Show"},"Show.get":{type:"method",name:"Show.get",href:"/#/docs/class/Show?scrollTo=get"},"Show.getEpisodes":{type:"method",name:"Show.getEpisodes",href:"/#/docs/class/Show?scrollTo=getEpisodes"},"Show.token":{type:"property",name:"Show.token",href:"/#/docs/class/Show?scrollTo=token"},UserClient:{type:"class",name:"UserClient",href:"/#/docs/class/UserClient"},"UserClient.info":{type:"method",name:"UserClient.info",href:"/#/docs/class/UserClient?scrollTo=info"},"UserClient.getTopTracks":{type:"method",name:"UserClient.getTopTracks",href:"/#/docs/class/UserClient?scrollTo=getTopTracks"},"UserClient.getTopArtists":{type:"method",name:"UserClient.getTopArtists",href:"/#/docs/class/UserClient?scrollTo=getTopArtists"},"UserClient.getAffinity":{type:"method",name:"UserClient.getAffinity",href:"/#/docs/class/UserClient?scrollTo=getAffinity"},"UserClient.getPlaylists":{type:"method",name:"UserClient.getPlaylists",href:"/#/docs/class/UserClient?scrollTo=getPlaylists"},"UserClient.getAlbums":{type:"method",name:"UserClient.getAlbums",href:"/#/docs/class/UserClient?scrollTo=getAlbums"},"UserClient.getTracks":{type:"method",name:"UserClient.getTracks",href:"/#/docs/class/UserClient?scrollTo=getTracks"},"UserClient.getShows":{type:"method",name:"UserClient.getShows",href:"/#/docs/class/UserClient?scrollTo=getShows"},"UserClient.deleteAlbum":{type:"method",name:"UserClient.deleteAlbum",href:"/#/docs/class/UserClient?scrollTo=deleteAlbum"},"UserClient.deleteTrack":{type:"method",name:"UserClient.deleteTrack",href:"/#/docs/class/UserClient?scrollTo=deleteTrack"},"UserClient.deleteShow":{type:"method",name:"UserClient.deleteShow",href:"/#/docs/class/UserClient?scrollTo=deleteShow"},"UserClient.addAlbum":{type:"method",name:"UserClient.addAlbum",href:"/#/docs/class/UserClient?scrollTo=addAlbum"},"UserClient.addTrack":{type:"method",name:"UserClient.addTrack",href:"/#/docs/class/UserClient?scrollTo=addTrack"},"UserClient.addShow":{type:"method",name:"UserClient.addShow",href:"/#/docs/class/UserClient?scrollTo=addShow"},"UserClient.followsUser":{type:"method",name:"UserClient.followsUser",href:"/#/docs/class/UserClient?scrollTo=followsUser"},"UserClient.followsArtist":{type:"method",name:"UserClient.followsArtist",href:"/#/docs/class/UserClient?scrollTo=followsArtist"},"UserClient.follows":{type:"method",name:"UserClient.follows",href:"/#/docs/class/UserClient?scrollTo=follows"},"UserClient.followUser":{type:"method",name:"UserClient.followUser",href:"/#/docs/class/UserClient?scrollTo=followUser"},"UserClient.followArtist":{type:"method",name:"UserClient.followArtist",href:"/#/docs/class/UserClient?scrollTo=followArtist"},"UserClient.followPlaylist":{type:"method",name:"UserClient.followPlaylist",href:"/#/docs/class/UserClient?scrollTo=followPlaylist"},"UserClient.follow":{type:"method",name:"UserClient.follow",href:"/#/docs/class/UserClient?scrollTo=follow"},"UserClient.unfollowUser":{type:"method",name:"UserClient.unfollowUser",href:"/#/docs/class/UserClient?scrollTo=unfollowUser"},"UserClient.unfollowArtist":{type:"method",name:"UserClient.unfollowArtist",href:"/#/docs/class/UserClient?scrollTo=unfollowArtist"},"UserClient.unfollowPlaylist":{type:"method",name:"UserClient.unfollowPlaylist",href:"/#/docs/class/UserClient?scrollTo=unfollowPlaylist"},"UserClient.unfollow":{type:"method",name:"UserClient.unfollow",href:"/#/docs/class/UserClient?scrollTo=unfollow"},"UserClient.login":{type:"method",name:"UserClient.login",href:"/#/docs/class/UserClient?scrollTo=login"},"UserClient.token":{type:"property",name:"UserClient.token",href:"/#/docs/class/UserClient?scrollTo=token"},"UserClient.startedAt":{type:"property",name:"UserClient.startedAt",href:"/#/docs/class/UserClient?scrollTo=startedAt"},"UserClient.player":{type:"property",name:"UserClient.player",href:"/#/docs/class/UserClient?scrollTo=player"},UserPlayer:{type:"class",name:"UserPlayer",href:"/#/docs/class/UserPlayer"},"UserPlayer.getCurrentPlayback":{type:"method",name:"UserPlayer.getCurrentPlayback",href:"/#/docs/class/UserPlayer?scrollTo=getCurrentPlayback"},"UserPlayer.getDevices":{type:"method",name:"UserPlayer.getDevices",href:"/#/docs/class/UserPlayer?scrollTo=getDevices"},"UserPlayer.getRecentlyPlayed":{type:"method",name:"UserPlayer.getRecentlyPlayed",href:"/#/docs/class/UserPlayer?scrollTo=getRecentlyPlayed"},"UserPlayer.getCurrentlyPlaying":{type:"method",name:"UserPlayer.getCurrentlyPlaying",href:"/#/docs/class/UserPlayer?scrollTo=getCurrentlyPlaying"},"UserPlayer.play":{type:"method",name:"UserPlayer.play",href:"/#/docs/class/UserPlayer?scrollTo=play"},"UserPlayer.pause":{type:"method",name:"UserPlayer.pause",href:"/#/docs/class/UserPlayer?scrollTo=pause"},"UserPlayer.seek":{type:"method",name:"UserPlayer.seek",href:"/#/docs/class/UserPlayer?scrollTo=seek"},"UserPlayer.repeat":{type:"method",name:"UserPlayer.repeat",href:"/#/docs/class/UserPlayer?scrollTo=repeat"},"UserPlayer.setVolume":{type:"method",name:"UserPlayer.setVolume",href:"/#/docs/class/UserPlayer?scrollTo=setVolume"},"UserPlayer.next":{type:"method",name:"UserPlayer.next",href:"/#/docs/class/UserPlayer?scrollTo=next"},"UserPlayer.previous":{type:"method",name:"UserPlayer.previous",href:"/#/docs/class/UserPlayer?scrollTo=previous"},"UserPlayer.shuffle":{type:"method",name:"UserPlayer.shuffle",href:"/#/docs/class/UserPlayer?scrollTo=shuffle"},"UserPlayer.token":{type:"property",name:"UserPlayer.token",href:"/#/docs/class/UserPlayer?scrollTo=token"},SearchOptions:{type:"typedef",name:"SearchOptions",href:"/#/docs/typedef/SearchOptions"},BasicOptions:{type:"typedef",name:"BasicOptions",href:"/#/docs/typedef/BasicOptions"},AuthGetOptions:{type:"typedef",name:"AuthGetOptions",href:"/#/docs/typedef/AuthGetOptions"},AuthBuildOptions:{type:"typedef",name:"AuthBuildOptions",href:"/#/docs/typedef/AuthBuildOptions"},AuthRefreshOptions:{type:"typedef",name:"AuthRefreshOptions",href:"/#/docs/typedef/AuthRefreshOptions"},AuthRefresh:{type:"typedef",name:"AuthRefresh",href:"/#/docs/typedef/AuthRefresh"},FetchOptions:{type:"typedef",name:"FetchOptions",href:"/#/docs/typedef/FetchOptions"},RecentlyPlayedOptions:{type:"typedef",name:"RecentlyPlayedOptions",href:"/#/docs/typedef/RecentlyPlayedOptions"},CodeImageReturn:{type:"typedef",name:"CodeImageReturn",href:"/#/docs/typedef/CodeImageReturn"},DominantColor:{type:"typedef",name:"DominantColor",href:"/#/docs/typedef/DominantColor"}}},59:function(e,t){e.exports={Client:{description:"Spotify Client class to interact with spotify api! Remember client.user can only be used when you are using a scoped token.",example:'new Spotify.Client("token")',params:[["token","string","Your oauth token",!0]],properties:{token:{description:"Your auth token",type:"string"},startedAt:{description:"Client started at time",type:"number"},utils:{description:"Returns new util class",type:"Util",href:"https://spotify-api-js-test.netlify.app/#/class/util"},oauth:{description:"All authorization endpoints",type:"Auth",href:"https://spotify-api-js-test.netlify.app/#/class/auth"},albums:{description:"Album api endpoints",type:"Album",href:"https://spotify-api-js-test.netlify.app/#/class/album"},artists:{description:"Artist api endpoints",type:"Artist",href:"https://spotify-api-js-test.netlify.app/#/class/artist"},playlists:{description:"Playlist api endpoints",type:"Playlist",href:"https://spotify-api-js-test.netlify.app/#/class/playlist"},tracks:{description:"Track api endpoints",type:"Track",href:"https://spotify-api-js-test.netlify.app/#/class/track"},users:{description:"User api endpoints",type:"User",href:"https://spotify-api-js-test.netlify.app/#/class/user"},episodes:{description:"Episode api endpoints",type:"Episode",href:"https://spotify-api-js-test.netlify.app/#/class/episode"},shows:{description:"Show api endpoints",type:"Show",href:"https://spotify-api-js-test.netlify.app/#/class/show"},browse:{description:"Spotify browsing api endpoints",type:"Browse",href:"https://spotify-api-js-test.netlify.app/#/class/browse"},user:{description:"Current User api endpoints",type:"UserClient",href:"https://spotify-api-js-test.netlify.app/#/class/userclient"}},getters:{uptime:{description:"Uptime of the client",type:"number"}},methods:{search:{description:"Search through various types. But will not have advanced option.",returns:"Promise<any>",parameters:[["query","string","Your query to search"],["options","SearchOptions","Search options",!0]]},login:{description:"Login to your spotify client.",returns:"void",parameters:[["token","string","Your token"]]}}},Auth:{description:"Oauth class. All auth endpoints.",example:"auth",params:[["token","string","Your oauth token",!0]],properties:{token:{description:"Your auth token",type:"string"}},methods:{get:{description:"Returns a new api auth token",returns:"Promise<string>",parameters:[["options","AuthGetOptions","Your client secret and client id in object form"]]},refresh:{description:"Refreshes and gets a new authorization token at the same time can make a new scoped access_token by using code query sent by spotify authorization.",returns:"Promise<AuthRefresh>",parameters:[["options","AuthRefreshOptions","Your client id, client secret and redirect uri in object form"]]},build:{description:"Builds an Authorization String",returns:"Promise<string>",parameters:[["options","AuthBuildOptions","Your client id, client secret and redirect uri in object form"]]}}},Util:{description:"Utility class. All utility methods are present here.",example:'new Spotify.Util("token")',params:[["token","string","Your oauth token",!0]],properties:{token:{description:"Your auth token",type:"string"}},methods:{hexToRgb:{description:"Coverts hex code to rgb number array",returns:"number[]",parameters:[["hex","string","Hex code to convert"]]},fetch:{description:"Quick method to fetch from spotify api. Will return the data required or will throw error if bad request.",returns:"Promise<any>",parameters:[["options","FetchOptions","Options to fetch"]]},getURIData:{description:"Returns the spotify uri data requested",returns:"Promise<any>",parameters:[["uri","string","Uri"]]},getCodeImage:{description:"Returns the code image url by the spotify uri",returns:"Promise<CodeImageReturn>",parameters:[["uri","string","Uri"]]}}},Browse:{description:"All browse endpoints in the form of class",example:'new Spotify.Browse("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{getCategory:{description:"Returns the information about the category by the id provided.",returns:"Promise<any>",parameters:[["id","string","Id of the category"]]},getCategoryPlaylists:{description:"Returns the playlists about the category by the id provided.",returns:"Promise<any>",parameters:[["id","string","Id of the category"],["limit","number","Limit your results",!0]]},categories:{description:"Returns the list of all categories.",returns:"Promise<any>",parameters:[["limit","number","Limit your results",!0]]},featuredCategories:{description:"Returns the list of all featured categories.",returns:"Promise<any>",parameters:[["limit","number","Limit your results",!0]]},newReleases:{description:"Returns the list of all new releases.",returns:"Promise<any>",parameters:[["limit","number","Limit your results",!0]]}}},Artist:{description:"All artist api endpoints in the form of class",example:'new Spotify.Artist("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{search:{description:"Returns search info by the query and options provided",returns:"Promise<any[]>",parameters:[["q","string","Query to search"],["options","BasicOptions","Options to help your data collection better!",!0]]},get:{description:"Returns artist information by id",returns:"Promise<any>",parameters:[["id","string","Id of the artist"]]},getAlbums:{description:"Returns the list of albums by the Spotify Artist by the artist id",returns:"Promise<any[]>",parameters:[["id","string","Id of the artist"],["options","BasicOptions","Options to help your data collection better!",!0]]},topTracks:{description:"Returns the top tracks of the Spotify Artist by the artist id",returns:"Promise<any[]>",parameters:[["id","string","Id of the artist"],["options","BasicOptions","Options to help your data collection better!",!0]]},relatedArtists:{description:"Returns list of related artists of the Spotify Artist by the artist id",returns:"Promise<any[]>",parameters:[["id","string","Id of the artist"],["options","BasicOptions","Options to help your data collection better!",!0]]}}},Album:{description:"All album api endpoints in the form of class",example:'new Spotify.Album("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{search:{description:"Returns albums search",returns:"Promise<any[]>",parameters:[["q","string","Query to search"],["options","BasicOptions","Options to help your data collection better!",!0]]},get:{description:"Returns album info by if",returns:"Promise<any>",parameters:[["id","string","Id of the album"]]},getTracks:{description:"Returns album tracks by album id",returns:"Promise<any>",parameters:[["id","string","Id of the album"],["options","BasicOptions","Options to help your data collection better!",!0]]}}},Playlist:{description:"All playlist api endpoints in the form of class",example:'new Spotify.Playlist("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{get:{description:"Returns playlist info by id",returns:"Promise<any>",parameters:[["id","string","Id of the spotify playlist"]]},getTracks:{description:"Returns the tracks of the spotify playlist",returns:"Promise<any[]>",parameters:[["id","string","Id of the spotify playlist"],["options","BasicOptions","Options to help your data collection better!",!0]]},getCoverImage:{description:"Returns the cover image of the playlist by id",returns:"Promise<any>",parameters:[["id","string","Id of the spotify playlist"]]},follows:{description:"Verify if the user follows the playlist",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the spotify playlist"],["userIds","string[] or string","Id of the users or user. If users use array as [userid1, userid2] else if one user just use userid1"]]}}},User:{description:"All user api endpoints in the form of class",example:'new Spotify.User("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{get:{description:"Returns the spotify user information by id",returns:"Promise<any>",parameters:[["id","string","Id of the spotify user"]]},getPlaylists:{description:"Returns the spotify user playlists by id",returns:"Promise<any>",parameters:[["id","string","Id of the spotify user"]]}}},Track:{description:"All track api endpoints in the form of class",example:'new Spotify.User("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{search:{description:"Returns search information of tracks",returns:"Promise<any[]>",parameters:[["q","string","Query to search"],["options","BasicOptions","Options to help your data collection better!",!0]]},get:{description:"Returns track info by id",returns:"Promise<any>",parameters:[["id","string","Id of the track"]]},audioFeatures:{description:"Returns the audio features by id",returns:"Promise<any>",parameters:[["id","string","Id of the track"]]},audioAnalysis:{description:"Returns the audio analysis of the track by id",returns:"Promise<any>",parameters:[["id","string","Id of the track"]]}}},Episode:{description:"All episode api endpoints in the form of class",example:'new Spotify.Episode("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{get:{description:"Returns episode information by id",returns:"Promise<any>",parameters:[["id","string","Id of the episode"]]}}},Show:{description:"All show api endpoints in the form of class",example:'new Spotify.Show("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{get:{description:"Returns the show information by id",returns:"Promise<any>",parameters:[["id","string","Id of the show"]]},getEpisodes:{description:"Returns the show episodes by id",returns:"Promise<any>",parameters:[["id","string","Id of the show"],["limit","number","Limit of your results",!0]]}}},UserClient:{description:"All current user api endpoints in the form of class. Remember you need a scoped token to access current user api endpoints.",example:'new Spotify.UserClient("token")',properties:{token:{description:"Your auth token",type:"string"},startedAt:{description:"Client started at time",type:"number"},player:{description:"User player. Most of the player api is available only for spotify premium users only",type:"UserPlayer",href:"https://spotify-api-js-test.netlify.app/#/class/userplayer"}},getters:{uptime:{description:"Uptime of the client",type:"number"}},methods:{info:{description:"Returns current user information",returns:"Promise<any>",parameters:[]},getTopTracks:{description:"Returns top tracks based on your affinity",returns:"Promise<any>",parameters:[]},getTopArtists:{description:"Returns top artists based on your affinity",returns:"Promise<any>",parameters:[]},getAffinity:{description:"Aliases function for getTopArtists and getTopTracks",returns:"Promise<any>",parameters:[["type","'artist' or 'track'","Type of affinity"]]},getPlaylists:{description:"Returns the list of all playlists of the current user",returns:"Promise<any>",parameters:[["limit","number","Limit of your results",!0]]},getAlbums:{description:"Returns the list of all albums of the current user",returns:"Promise<any>",parameters:[["limit","number","Limit of your results",!0]]},getTracks:{description:"Returns the list of all tracks of the current user",returns:"Promise<any>",parameters:[["limit","number","Limit of your results",!0]]},getShows:{description:"Returns the list of all shows of the current user",returns:"Promise<any>",parameters:[["limit","number","Limit of your results",!0]]},deleteAlbum:{description:"Deletes your saved spotify albums",returns:"Promise<any>",parameters:[["ids","string","Id of the album to delete"]]},deleteTrack:{description:"Deletes your saved spotify tracks",returns:"Promise<any>",parameters:[["ids","string","Id of the track to delete"]]},deleteShow:{description:"Deletes your saved spotify shows",returns:"Promise<any>",parameters:[["ids","string","Id of the show to delete"]]},addAlbum:{description:"Adds spotify albums to your saved list",returns:"Promise<any>",parameters:[["ids","string","Id of the album to add"]]},addTrack:{description:"Adds spotify tracks to your saved list",returns:"Promise<any>",parameters:[["ids","string","Id of the track to add"]]},addShow:{description:"Adds spotify shows to your saved list",returns:"Promise<any>",parameters:[["ids","string","Id of the show to add"]]},followsUser:{description:"Verify if you follow a user",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the user to verify if the current user follow them"]]},followsArtist:{description:"Verify if you follow an artist",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the artist or user to verify if the current user follow them"],["isArtist","boolean","Is the id provided is of artist then true else false, by default it is false"]]},follows:{description:"Aliases for followsArtist and followsUser",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the user or artist to verify if the current user follow them"]]},followUser:{description:"Follow an user",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the user"]]},followArtist:{description:"Follow an artist",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the artist"]]},followPlaylist:{description:"Follow a playlist",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the playlist"]]},follow:{description:"Follow a artist, playlist or user",returns:"Promise<any>",parameters:[["id","string","Id of the artist, playlist or user"],["type","'artist', 'user' or 'playlist'","Type of the id provided"]]},unfollowUser:{description:"Unfollow an user",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the user"]]},unfollowArtist:{description:"Unfollow an artist",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the artist"]]},unfollowPlaylist:{description:"Unfollow a playlist",returns:"Promise<boolean[]>",parameters:[["id","string","Id of the playlist"]]},unfollow:{description:"Unfollow a artist, playlist or user",returns:"Promise<any>",parameters:[["id","string","Id of the artist, playlist or user"],["type","'artist', 'user' or 'playlist'","Type of the id provided"]]},login:{description:"Make a new login by refreshing the token. Similar to Auth.refresh",returns:"void",parameters:[["options","AuthRefreshOptions","Options to login"]]}}},UserPlayer:{description:"All player api endpoints in the form of class. Remember you need a scoped token to access current user api endpoints.",example:'new Spotify.UserPlayer("token")',properties:{token:{description:"Your auth token",type:"string"}},methods:{getCurrentPlayback:{description:"Returns current playback",returns:"Promise<any>",parameters:[]},getDevices:{description:"Returns the active devices on spotify",returns:"Promise<any>",parameters:[]},getRecentlyPlayed:{description:"Returns recently played data",returns:"Promise<any>",parameters:[["options","RecentlyPlayedOptions","Filter the data by selecting options",!0]]},getCurrentlyPlaying:{description:"Returns currently playing track and data",returns:"Promise<any>",parameters:[]},play:{description:"Plays the player",returns:"Promise<any>",parameters:[]},pause:{description:"Pauses the player",returns:"Promise<any>",parameters:[]},seek:{description:"Seeks the player to the position provided",returns:"Promise<any>",parameters:[["position","number","Position in ms to seek the player"]]},repeat:{description:"Repeats the player",returns:"Promise<any>",parameters:[["type","'track' or 'context' or 'off'","Type of repeat"]]},setVolume:{description:"Set volume to the player",returns:"Promise<any>",parameters:[["volume","number","Volume to set"]]},next:{description:"Plays next track",returns:"Promise<any>",parameters:[]},previous:{description:"Plays the previous track",returns:"Promise<any>",parameters:[]},shuffle:{description:"Shuffles the playback",returns:"Promise<any>",parameters:[["state","boolean","State while shuffling"]]}}}}},60:function(e,t){e.exports={SearchOptions:{description:"Search options object structure.",parameters:[["limit","number","Limit of results",!0],["type","string[]","Type of search",!0]]},BasicOptions:{description:"Advanced search options object structure.",parameters:[["limit","number","Limit of results",!0],["advanced","boolean","Making advanced option to true will return you the codeImage and dominantColor with it"]]},AuthGetOptions:{description:"Auth.get options object structure.",parameters:[["client_id","string","Your spotify app client id"],["client_secret","string","Your spotify app client secret"]]},AuthBuildOptions:{description:"Auth.build options object structure.",parameters:[["client_id","string","Your spotify app client id"],["redirect_uri","string","Url where the user will be redirect after the login"],["scopes","string",'The scopes you need from the user while authorizing in a string in the format of "scope1 scope2"',!0]]},AuthRefreshOptions:{description:"Auth.refresh options object structure.",parameters:[["client_id","string","Your spotify app client id"],["client_secret","string","Your spotify app client secret"],["code","string","Code query sent by the spotify authorization. You can use the refresh_token also to get a new access_token."],["redirect_uri","string","This redirect uri would not actually redirect you. This is only for validation. You need to enter the same uri/url used in the authorization link or Auth.build"]]},AuthRefresh:{description:"Object structure returned by Auth.refresh.",parameters:[["access_token","string","User access token"],["token_type","string","Type of the token"],["expires_in","number","Time in which the access_token expires"],["refresh_token","string","Token which you can use to refresh in options.code and get a new token using Auth.refresh method"],["scope","string","Authorization scopes you have requested"]]},FetchOptions:{description:"Util.fetch options object structure.",parameters:[["link","string","Link after https://api.spotify.com/"],["params","object","All the query parameters in object form",!0],["headers","object","Additional headers than Authorization header",!0],["method","string","By default the fetch methods uses GET method. You can set your own method",!0]]},RecentlyPlayedOptions:{description:"UserPlayer.getRecentlyPlayed options object structure",parameters:[["limit","number","Limit of your results",!0],["after","any","Filters results by after time",!0],["before","any","Filters results by before time",!0]]},CodeImageReturn:{description:"Return object data by code image",parameters:[["image","string","The actual code image"],["dominantColor","DominantColor","The dominant color of the coverpage"]]},DominantColor:{description:"dominantColor object structure of CodeImageReturn typedef",parameters:[["hex","string","Dominant color in hex code"],["rgb","number[]","Dominant color in rgb with alpha"]]}}},66:function(e,t,s){"use strict";s.r(t);var r=s(0),o=s(1),i=s.n(o),n=s(34),a=s.n(n),l=s(37),c=s(2),p=(s(44),s(8)),d=s(9),h=s(11),u=s(10);function y(){return Object(r.jsx)(r.Fragment,{children:Object(r.jsxs)("div",{id:"coverpage",align:"center",style:{borderRadius:0,position:"absolute",top:0,left:0,right:0,paddingBottom:"50px",background:"linear-gradient(to left bottom, hsl(133, 100%, 85%) 0%,hsl(128, 100%, 85%) 100%)"},children:[Object(r.jsx)("div",{style:{position:"absolute",left:0,top:0,right:0,height:"40px"},children:Object(r.jsxs)("div",{style:{position:"absolute",top:"20px",right:"20px"},children:[Object(r.jsx)("a",{className:"header-link active",href:"/",children:"Home"}),Object(r.jsx)("a",{className:"header-link",href:"https://github.com/spotify-api/spotify-api.js",children:"GitHub"}),Object(r.jsx)("a",{className:"header-link",href:"https://npmjs.com/spotify-api.js",children:"NPM"})]})}),Object(r.jsxs)("div",{className:"cover",children:[Object(r.jsxs)("h1",{class:"cover-title",children:[Object(r.jsx)("font",{style:{color:"var(--theme-color)"},children:"Spotify"}),"Api",Object(r.jsx)("img",{src:"https://avatars0.githubusercontent.com/u/71826863?s=400&u=c871a66a95a2ca7e9b0f072aa9635b31fbc1e800&v=4",width:"20px"}),Object(r.jsx)("font",{children:"JS"})]}),Object(r.jsx)("p",{class:"cover-description",children:"A complete node js wrapper of spotify api with oauth support"}),Object(r.jsx)("code",{style:{background:"#f5f5f5",padding:"16px",borderRadius:"5px",position:"relative",top:"10px",overflow:"auto"},children:"npm install spotify-api.js"})]})]})})}function m(){return Object(r.jsx)(r.Fragment,{children:Object(r.jsxs)("div",{className:"jumbotron footer",children:[Object(r.jsx)("font",{children:Object(r.jsx)("strong",{children:"Spotify-api.js"})}),Object(r.jsx)("p",{children:"A powerful node.js library to interact with spotify api"}),Object(r.jsxs)("p",{children:["Site made by ",Object(r.jsx)("a",{href:"https://decimaldev.xyz/",style:{color:"#888"},children:Object(r.jsx)("strong",{children:"Decimal Development"})})]})]})})}function f(){document.querySelectorAll(".js").forEach((function(e){e.innerHTML.includes("\x3c!-- updated --\x3e")||(e.innerHTML="\x3c!-- updated --\x3e"+e.innerHTML.replace(/\n/,"<br/>").replace(/"(.*?)"/g,'<font style="color: #42b983;">"$1"</font>').replace(/'(.*?)'/g,"<font style=\"color: #42b983;\">'$1'</font>").replace(/`(.*?)`/g,'<font style="color: #42b983;">`$1`</font>').replace(/\${(.*?)}/g,'<font style="color: violet;">${$1}</font>').replace(/\basync\b/g,'<font style="color: #e96900;">async</font>').replace(/\bfunction[\s]*([a-zA-Z0-9$().;:&,=' ])\b/g,'<font style="color: #e96900;">function </font>').replace(/\/\/[\s]*([a-zA-Z0-9$().;:&,=' ]{1,})/g,'<font style="color: grey">// $1</font>').replace(/\bconsole\b/g,'<font style="color: #e96900;">console</font>').replace(/\bnew\b/g,'<font style="color: #e96900;">new</font>').replace(/\brequire\b/g,'<font style="color: #e96900;">require</font>').replace(/\bconst\b/g,'<font style="color: #e96900;">const</font>').replace(/\bthen\b/g,'<font style="color: #e96900;">then</font>').replace(/\bcatch\b/g,'<font style="color: #e96900;">catch</font>').replace(/\bawait\b/g,'<font style="color: #e96900;">await</font>'))}))}var b=function(e){Object(h.a)(s,e);var t=Object(u.a)(s);function s(){return Object(p.a)(this,s),t.apply(this,arguments)}return Object(d.a)(s,[{key:"componentDidMount",value:function(){var e=", 100%, 85%";try{document.getElementById("coverpage").style.background="linear-gradient(to left bottom, "+"hsl(".concat(Math.floor(255*Math.random())+e,") 0%,")+"hsl(".concat(Math.floor(255*Math.random())+e,") 100%)")}catch(t){}f()}},{key:"render",value:function(){return Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)(y,{}),Object(r.jsxs)("div",{className:"home-content",children:[Object(r.jsxs)("div",{children:[Object(r.jsxs)("div",{children:[Object(r.jsx)("h2",{children:"About"}),Object(r.jsxs)("p",{children:["A powerful ",Object(r.jsx)("a",{href:"https://nodejs.org/en/",children:"node.js"})," library to interact with spotify api very quick and fast.",Object(r.jsxs)("ul",{children:[Object(r.jsx)("li",{children:"Object Oriented"}),Object(r.jsx)("li",{children:"100% Promised based"}),Object(r.jsx)("li",{children:"Covers all the spotify api endpoints"})]})]})]}),Object(r.jsxs)("div",{children:[Object(r.jsx)("h2",{children:"Example"}),Object(r.jsxs)("pre",{className:"js",children:["const Spotify = require('spotify-api.js');",Object(r.jsx)("br",{}),"const client = new Spotify.Client('token');",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"client.tracks.search('some-search')",Object(r.jsx)("br",{}),".then(console.log)",Object(r.jsx)("br",{}),".catch(console.log)"]})]})]}),Object(r.jsxs)("div",{className:"bottom-links",children:[Object(r.jsx)("a",{href:"/#/docs/class/client",children:"Get Started"}),Object(r.jsx)("a",{href:"https://discord.gg/FrduEZd",children:"Discord"})]})]}),Object(r.jsx)(m,{})]})}}]),s}(i.a.Component);function j(){return Object(r.jsx)(r.Fragment,{children:Object(r.jsxs)("div",{className:"header",children:[Object(r.jsx)("div",{style:{position:"absolute",top:4,left:"20px"},children:Object(r.jsx)("a",{href:"/",style:{cursor:"pointer"},children:Object(r.jsxs)("h1",{style:{fontSize:"20px",fontWeight:"bolder"},children:[Object(r.jsx)("font",{style:{color:"var(--theme-color)"},children:"Spotify"}),Object(r.jsxs)("font",{style:{color:"#34495e"},children:["Api",Object(r.jsx)("img",{src:"https://avatars0.githubusercontent.com/u/71826863?s=400&u=c871a66a95a2ca7e9b0f072aa9635b31fbc1e800&v=4",width:"8px"}),"JS"]})]})})}),Object(r.jsxs)("div",{style:{position:"absolute",top:"20px",right:"20px"},children:[Object(r.jsx)("a",{className:"header-link active",href:"/",children:"Home"}),Object(r.jsx)("a",{className:"header-link",href:"https://github.com/spotify-api/spotify-api.js",children:"GitHub"}),Object(r.jsx)("a",{className:"header-link",href:"/#/docs/search",children:Object(r.jsx)("i",{class:"fa fa-search","aria-hidden":"true"})})]})]})})}var g=!0;innerWidth<700&&(g=!1);var O=function(e){g?(document.getElementById("doc-section").style.width=innerWidth-400+"px",document.getElementById("doc-sidebar").style.display="block"):(document.getElementById("doc-section").style.width=innerWidth<600?"80%":"100%",document.getElementById("doc-sidebar").style.display="none")},x=function(e){g?(g=!1,document.getElementById("doc-sidebar").style.display="none",document.getElementById("doc-section").style.width=innerWidth<600?"80%":"90%"):(g=!0,document.getElementById("doc-section").style.width=innerWidth-400+"px",document.getElementById("doc-sidebar").style.display="block")},k=function(e){Object(h.a)(s,e);var t=Object(u.a)(s);function s(){return Object(p.a)(this,s),t.apply(this,arguments)}return Object(d.a)(s,[{key:"componentDidMount",value:function(){O();var e=function(){var e=new URLSearchParams(location.href.split("?")[1]),t=document.getElementById(e.get("scrollTo"));t&&t.scrollIntoView()};window.addEventListener("resize",O),window.addEventListener("load",e),window.addEventListener("hashchange",e)}},{key:"render",value:function(){return Object(r.jsxs)(r.Fragment,{children:[Object(r.jsxs)("div",{children:[Object(r.jsx)("div",{className:"sidebar"}),Object(r.jsxs)("div",{children:[Object(r.jsx)(j,{}),Object(r.jsx)("div",{id:"doc-sidebar",children:Object(r.jsx)("div",{style:{marginTop:"50px"},children:Object(r.jsx)(this.props.sidebar,{})})}),Object(r.jsxs)("div",{id:"doc-section",style:{marginTop:"60px",width:"100%"},children:[this.props.children,Object(r.jsx)("div",{style:{marginTop:"50px",height:"60px"}})]})]})]}),Object(r.jsx)("div",{id:"nav-btn",children:Object(r.jsx)("a",{onClick:x,children:Object(r.jsx)("i",{className:"fa fa-bars fa-2x","aria-hidden":"true"})})})]})}}]),s}(i.a.Component),w=function(e){Object(h.a)(s,e);var t=Object(u.a)(s);function s(){return Object(p.a)(this,s),t.apply(this,arguments)}return Object(d.a)(s,[{key:"componentDidMount",value:function(){f()}},{key:"componentDidUpdate",value:function(){f()}},{key:"render",value:function(){var e=this,t=function(e){return Object(r.jsx)("h2",{children:"404 - Not Found"})};switch(this.props.docType){case"class":t=function(){var t=[],s=e.props.class;t.push(Object(r.jsx)("h1",{children:e.props.className})),t.push(s.description);var o=Object.keys(s.properties),i=Object.keys(s.methods),n=s.getters?Object.keys(s.getters):null;return t.push(Object(r.jsxs)("blockquote",{children:[Object(r.jsx)("strong",{children:"Properties:"})," ",o.join(", "),Object(r.jsx)("br",{}),Object(r.jsx)("strong",{children:"Methods:"})," ",i.join(", "),n?Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)("br",{}),Object(r.jsx)("strong",{children:"Getters:"})," ",Object(r.jsx)("font",{children:n.join(", ")})]}):""]})),t.push(Object(r.jsxs)("pre",{className:"js",children:["new Spotify.",e.props.className,"('token');"]})),t.push(Object(r.jsx)("hr",{})),t.push(Object(r.jsx)("h2",{children:"Properties"})),o.forEach((function(e){t.push(Object(r.jsxs)("h3",{className:"light",id:e.toLowerCase(),children:[".",e]})),e=s.properties[e],t.push(Object(r.jsxs)("blockquote",{children:[e.description,Object(r.jsx)("br",{}),Object(r.jsx)("strong",{children:"Type:"})," ",Object(r.jsx)("font",{className:"type",children:e.href?Object(r.jsx)("a",{href:e.href,children:e.type}):e.type})]}))})),t.push(Object(r.jsx)("hr",{})),t.push(Object(r.jsx)("h2",{children:"Methods"})),i.forEach((function(e){var o=e;e=s.methods[e],t.push(Object(r.jsxs)("h3",{className:"light",id:o.toLowerCase(),children:[".",o,"(",Object(r.jsx)("font",{style:{opacity:.7},children:e.parameters.map((function(e){return e[0]})).join(", ")}),")"]})),t.push(Object(r.jsxs)("blockquote",{children:[e.description,Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),Object(r.jsxs)("table",{children:[Object(r.jsxs)("tr",{children:[Object(r.jsx)("th",{children:"PARAMETER"}),Object(r.jsx)("th",{children:"TYPE"}),Object(r.jsx)("th",{children:"DESCRIPTION"})]}),e.parameters.map((function(e){return Object(r.jsxs)("tr",{children:[Object(r.jsx)("td",{children:e[0]}),Object(r.jsx)("td",{children:Object(r.jsx)("font",{className:"type",children:e[1]})}),Object(r.jsxs)("td",{children:[e[3]?"Optional. ":"",e[2]]})]})}))]}),Object(r.jsx)("br",{}),Object(r.jsx)("strong",{children:"Returns:"})," ",Object(r.jsx)("font",{className:"type",children:e.returns})]}))})),t};break;case"typedef":t=function(t){var s=e.props.typedef;return Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)("h1",{children:e.props.typedefName}),Object(r.jsxs)("blockquote",{children:[s.description,Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),Object(r.jsxs)("table",{children:[Object(r.jsxs)("tr",{children:[Object(r.jsx)("th",{children:"PARAMETER"}),Object(r.jsx)("th",{children:"TYPE"}),Object(r.jsx)("th",{children:"DESCRIPTION"})]}),s.parameters.map((function(e){return Object(r.jsxs)("tr",{children:[Object(r.jsx)("td",{children:e[0]}),Object(r.jsx)("td",{className:"type",children:e[1]}),Object(r.jsxs)("td",{children:[e[3]?"Optional. ":"",e[2]]})]})}))]}),Object(r.jsx)("br",{})]})]})}}return Object(r.jsx)(r.Fragment,{children:Object(r.jsx)(k,{sidebar:this.props.sidebar,children:Object(r.jsx)(t,{})})})}}]),s}(i.a.Component),U=s(35),C=function(e){Object(h.a)(s,e);var t=Object(u.a)(s);function s(e){var r;return Object(p.a)(this,s),(r=t.call(this,e)).state={guide:"Loading...",highlight:!1},r.hashDidChange=function(e){if(!r.props.guide)return r.setState({guide:"<h2>404 - Not Found</h2>"});fetch("/guides/".concat(r.props.guide,".md")).then((function(e){return e.text()})).then((function(e){r.setState({guide:e}),f()}))},r}return Object(d.a)(s,[{key:"componentWillMount",value:function(){var e=this;if(!this.props.guide)return this.setState({guide:"<h2>404 - Not Found</h2>"});fetch("/guides/".concat(this.props.guide,".md")).then((function(e){return e.text()})).then((function(t){e.setState({guide:t}),f()})),window.addEventListener("hashchange",this.hashDidChange)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("hashchange",this.hashDidChange)}},{key:"render",value:function(){return Object(r.jsx)(r.Fragment,{children:Object(r.jsx)(k,{sidebar:this.props.sidebar,children:Object(r.jsx)(U.a,{markdown:this.state.guide})})})}}]),s}(i.a.Component),T=s(58),P={class:"#0c7cd5",typedef:"#94508c",method:"#ee6a2d",property:"#00afa0"},A=function(e){Object(h.a)(s,e);var t=Object(u.a)(s);function s(e){var o;return Object(p.a)(this,s),(o=t.call(this,e)).state={search:null},o.pathKeys=Object.keys(T),o.load=function(e){document.getElementById("search-box").addEventListener("keypress",(function(e){if("Enter"==e.code){var t=document.getElementById("search-box").value,s=o.pathKeys.filter((function(e){return e.toLowerCase().startsWith(t.toLowerCase())})).map((function(e){return e=T[e],Object(r.jsx)(r.Fragment,{children:Object(r.jsxs)("div",{className:"search-result-box",children:[Object(r.jsx)("div",{className:"type-block",style:{background:P[e.type]},children:e.type[0].toUpperCase()}),"  ",Object(r.jsx)("a",{href:e.href,children:e.name})]})})}));o.setState({search:s})}}))},o}return Object(d.a)(s,[{key:"componentDidMount",value:function(){this.load()}},{key:"render",value:function(){var e=this.state.search;return Object(r.jsx)(r.Fragment,{children:Object(r.jsxs)(k,{sidebar:this.props.sidebar,children:[Object(r.jsx)("input",{type:"text",placeholder:"Your Search...",id:"search-box"}),Object(r.jsxs)("h2",{children:[Object(r.jsx)("font",{id:"result-limit",children:e?e.length:0})," Results found"]}),e||""]})})}}]),s}(i.a.Component),v=s(59),R=s(60),S=["Spotify-Auth","Ping"],I=function(e){return Object(r.jsxs)("div",{className:"sidebar-section",children:[Object(r.jsx)("a",{href:"/#/docs/class/client",className:"sidebar-heads",children:"CLASSES"}),Object(r.jsx)("div",{style:{marginLeft:"20px"},children:Object.keys(v).map((function(t){return Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)("a",{href:"/#/docs/class/".concat(t),className:e==t?"sidebar-active":"",children:t}),Object(r.jsx)("br",{})]})}))}),Object(r.jsx)("div",{style:{height:"20px"}}),Object(r.jsx)("a",{href:"/#/docs/typedef/SearchOptions",className:"sidebar-heads",children:"TYPEDEFS"}),Object(r.jsx)("div",{style:{marginLeft:"20px"},children:Object.keys(R).map((function(t){return Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)("a",{href:"/#/docs/typedef/".concat(t),className:e==t?"sidebar-active":"",children:t}),Object(r.jsx)("br",{})]})}))}),Object(r.jsx)("div",{style:{height:"20px"}}),Object(r.jsx)("a",{href:"/#/docs/guide/spotify-auth",className:"sidebar-heads",children:"GUIDES"}),Object(r.jsx)("div",{style:{marginLeft:"20px"},children:S.map((function(t){var s=t.toLowerCase();return Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)("a",{href:"/#/docs/guide/".concat(s),className:e==s?"sidebar-active":"",children:t.replace(/-/g," ")}),Object(r.jsx)("br",{})]})}))}),Object(r.jsx)("div",{style:{height:"30px"}})]})};a.a.render(Object(r.jsxs)(l.a,{basename:"/",children:[Object(r.jsx)(c.a,{exact:!0,path:"/",component:b}),Object(r.jsx)(c.a,{path:"/docs/class/:className",component:function(){var e=Object(c.e)().className;e=e[0].toUpperCase()+e.slice(1);var t=v[e];return t?Object(r.jsx)(w,{docType:"class",class:t,className:e,sidebar:function(t){return I(e)}}):Object(r.jsx)(w,{sidebar:I})}}),Object(r.jsx)(c.a,{path:"/docs/typedef/:typedefName",component:function(){var e=Object(c.e)().typedefName,t=R[e];return t?Object(r.jsx)(w,{docType:"typedef",typedef:t,typedefName:e,sidebar:function(t){return I(e)}}):Object(r.jsx)(w,{sidebar:I})}}),Object(r.jsx)(c.a,{path:"/docs/guide/:guideName",component:function(){var e=Object(c.e)().guideName;return S.map((function(e){return e.toLowerCase()})).includes(e)?Object(r.jsx)(C,{guide:e,sidebar:function(t){return I(e)}}):Object(r.jsx)(w,{sidebar:I})}}),Object(r.jsx)(c.a,{path:"/docs/search",component:function(){return Object(r.jsx)(A,{sidebar:I})}})]}),document.getElementById("app"))}},[[66,1,2]]]);
//# sourceMappingURL=main.4da6d296.chunk.js.map